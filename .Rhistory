support_protesters_numeric = case_when(
support_protesters_actions == "Oпределенно, не одобряю" ~ 1,
support_protesters_actions == "Cкорее, не одобряю" ~ 2,
support_protesters_actions == "Cкорее, одобряю" ~ 3,
support_protesters_actions == "Определенно, одобряю" ~ 4,
#support_protesters_actions == "Затрудняюсь ответить" ~ 5,
#support_protesters_actions == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Protesters' Demands ###
support_protesters_demands = str_trim(DV1A),
support_protesters_demands_numeric = case_when(
support_protesters_demands == "Oпределенно, не одобряю" ~ 1,
support_protesters_demands == "Cкорее, не одобряю" ~ 2,
support_protesters_demands == "Cкорее, одобряю" ~ 3,
support_protesters_demands == "Определенно, одобряю" ~ 4,
#support_protesters_demands == "Затрудняюсь ответить" ~ 5,
#support_protesters_demands == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Arrests ###
support_arrests = str_trim(DV1B),
support_arrests_num = case_when(
support_arrests == "0 (совершенно не оправданно)" ~ 0,
support_arrests == "1" ~ 1,
support_arrests == "2" ~ 2,
support_arrests == "3" ~ 3,
support_arrests == "4" ~ 4,
support_arrests == "5" ~ 5,
support_arrests == "6" ~ 6,
support_arrests == "7" ~ 7,
support_arrests == "8" ~ 8,
support_arrests == "9" ~ 9,
support_arrests == "10 (полностью оправданно)" ~ 10,
# support_arrests == "Затрудняюсь ответить" ~ 11,
# support_arrests == "Отказ от ответа" ~ 12,
TRUE ~ NA_real_
),
### Protesters' Description ###
across(
c(aggressive, lawabiding, trustworthy, dangerous, think_about_me),  # List of the variables to transform
~ case_when(
str_trim(.) == "Абсолютно не применимо" ~ 1,
str_trim(.) == "Скорее не применимо" ~ 2,
str_trim(.) == "Частично применимо" ~ 3,
str_trim(.) == "Полностью применимо" ~ 4,
TRUE ~ NA_real_  # Treat any other response as NA
),
.names = "protesters_are_{col}"  # New variable naming pattern
),
### Protest Description ###
is_violent = str_trim(DV1D_1),
is_lawabiding = str_trim(DV1D_2),
is_lifethreatening = str_trim(DV1D_3),
)
View(long_data)
colnames(long_data)
data <- long_data %>% select(c(support_arrests, support_arrests_num, support_protesters_numeric, support_protesters_demands,
support_protesters_demands_numeric, protest_type, protest_actions, authorisation, protesters_are_aggressive, protesters_are_lawabiding,
protesters_are_trustworthy, protesters_are_think_about_me))
#
# protesters_are_aggressive, protesters_are_lawabiding,
#                  protesters_are_trustworthy, protesters_are_think_about_me, protesters_are_dangerous
dependent_vars <- c("protesters_are_aggressive",
"protesters_are_lawabiding",
"protesters_are_trustworthy",
"protesters_are_dangerous",
"protesters_are_think_about_me")
for (var in dependent_vars) {
models[[var]] <- lm(as.formula(paste(var, "~ factor(authorisation)*factor(protest_type) + factor(protest_actions)")),
data = data)
}
#
# protesters_are_aggressive, protesters_are_lawabiding,
#                  protesters_are_trustworthy, protesters_are_think_about_me, protesters_are_dangerous
dependent_vars <- c("protesters_are_aggressive",
"protesters_are_lawabiding",
"protesters_are_trustworthy",
"protesters_are_dangerous",
"protesters_are_think_about_me")
models <- list()
for (var in dependent_vars) {
models[[var]] <- lm(as.formula(paste(var, "~ factor(authorisation)*factor(protest_type) + factor(protest_actions)")),
data = data)
}
#
# protesters_are_aggressive, protesters_are_lawabiding,
#                  protesters_are_trustworthy, protesters_are_think_about_me, protesters_are_dangerous
dependent_vars <- c("protesters_are_aggressive",
"protesters_are_lawabiding",
"protesters_are_trustworthy",
"protesters_are_dangerous",
"protesters_are_think_about_me")
models <- list()
for (var in dependent_vars) {
models[[var]] <- lm(as.formula(paste(var, "~ factor(authorisation)*factor(protest_type) + factor(protest_actions)")),
data = data)
}
data <- long_data %>% select(c(support_arrests, support_arrests_num, support_protesters_numeric, support_protesters_demands,
support_protesters_demands_numeric, protest_type, protest_actions, authorisation, protesters_are_aggressive, protesters_are_lawabiding,
protesters_are_trustworthy, protesters_are_think_about_me,
protesters_are_dangerous))
#
# protesters_are_aggressive, protesters_are_lawabiding,
#                  protesters_are_trustworthy, protesters_are_think_about_me, protesters_are_dangerous
dependent_vars <- c("protesters_are_aggressive",
"protesters_are_lawabiding",
"protesters_are_trustworthy",
"protesters_are_dangerous",
"protesters_are_think_about_me")
models <- list()
for (var in dependent_vars) {
models[[var]] <- lm(as.formula(paste(var, "~ factor(authorisation)*factor(protest_type) + factor(protest_actions)")),
data = data)
}
m_aggressive <- models[["protesters_are_aggressive"]]
m_lawabiding <- models[["protesters_are_lawabiding"]]
m_trustworthy <- models[["protesters_are_trustworthy"]]
m_think_about_me <- models[["protesters_are_think_about_me"]]
m_dangerous <- models[["protesters_are_dangerous"]]
stargazer(m_aggressive, m_lawabiding, m_trustworthy,m_think_about_me, m_dangerous,
header=FALSE,
title="Arrests are justified",
digits=2)
models_to_display = list(m_aggressive, m_lawabiding, m_trustworthy,m_think_about_me, m_dangerous)
stargazer(models_to_display,
header=FALSE,
title="Arrests are justified",
digits=2)
models_to_display = list(m_aggressive, m_lawabiding, m_trustworthy,m_think_about_me, m_dangerous)
stargazer(models_to_display,
header=FALSE,
title="Arrests are justified",
digits=2,
header=FALSE,
no.space = TRUE,
dep.var.labels = c("Aggressive", "Law Abiding", "Trustworthy", "Think about Me",
"Dangerous"),
covariate.labels = c("unauthorised", "political", "demonstation", "auth x polit")
)
models_to_display = list(m_aggressive, m_lawabiding, m_trustworthy,m_think_about_me, m_dangerous)
stargazer(models_to_display,
header=FALSE,
title="Protesters Described As",
digits=2,
no.space = TRUE,
dep.var.labels = c("Aggressive", "Law Abiding", "Trustworthy", "Think about Me",
"Dangerous"),
covariate.labels = c("unauthorised", "political", "demonstation", "auth x polit")
)
summary(m_aggressive)
m_aggressive <- lm(protesters_are_aggressive ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
m_lawabiding <- lm(protesters_are_lawabiding ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
m_trustworthy <- lm(protesters_are_trustworthy ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
m_think_about_me <- lm(protesters_are_think_about_me ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
m_dangerous <- lm(protesters_are_dangerous ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
models = list(m_aggressive, m_lawabiding, m_trustworthy,m_think_about_me, m_dangerous)
stargazer(models_to_display,
header=FALSE,
title="Protesters Described As",
digits=2,
no.space = TRUE,
dep.var.labels = c("Aggressive", "Law Abiding", "Trustworthy", "Think about Me",
"Dangerous"),
covariate.labels = c("unauthorised", "political", "demonstation", "auth x polit")
)
unique(is_violent)
unique(long_data$is_violent)
long_data <- survey_sept %>%
### Support protesters actions ###
rename(age_cat = age_group,
aggressive = DV1C_1,
lawabiding = DV1C_2,
dangerous = DV1C_3,
trustworthy = DV1C_4,
think_about_me = DV1C_5,
is_violent = DV1D_1,
is_lawabiding = DV1D_2,
is_lifethreatening = DV1D_3) %>%
pivot_longer(
cols = contains("Group"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "support_protesters_actions"  # New column for the values
) %>%
filter(!is.na(support_protesters_actions)) %>%
mutate(
group_number = as.numeric(sub(".*?([0-9])$", "\\1", fact_id)),  # Extract group numbers,
protest_type = case_when(
group_number %in% c(1, 2, 3, 4) ~ "environmental",
group_number %in% c(5, 6, 7, 8) ~ "political",
),
authorisation = case_when(
group_number %in% c(6, 5, 2, 1) ~ "authorised",
group_number %in% c(8, 7, 4, 3) ~ "unauthorised"
),
protest_actions = case_when(
group_number %% 2 == 1 ~ "demonstration",    # Odd group_numbers represent 'demonstration'
group_number %% 2 == 0 ~ "clash_with_police" # Even group_numbers represent 'clash_with_police'
),
support_protesters_actions = str_trim(support_protesters_actions),
support_protesters_numeric = case_when(
support_protesters_actions == "Oпределенно, не одобряю" ~ 1,
support_protesters_actions == "Cкорее, не одобряю" ~ 2,
support_protesters_actions == "Cкорее, одобряю" ~ 3,
support_protesters_actions == "Определенно, одобряю" ~ 4,
#support_protesters_actions == "Затрудняюсь ответить" ~ 5,
#support_protesters_actions == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Protesters' Demands ###
support_protesters_demands = str_trim(DV1A),
support_protesters_demands_numeric = case_when(
support_protesters_demands == "Oпределенно, не одобряю" ~ 1,
support_protesters_demands == "Cкорее, не одобряю" ~ 2,
support_protesters_demands == "Cкорее, одобряю" ~ 3,
support_protesters_demands == "Определенно, одобряю" ~ 4,
#support_protesters_demands == "Затрудняюсь ответить" ~ 5,
#support_protesters_demands == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Arrests ###
support_arrests = str_trim(DV1B),
support_arrests_num = case_when(
support_arrests == "0 (совершенно не оправданно)" ~ 0,
support_arrests == "1" ~ 1,
support_arrests == "2" ~ 2,
support_arrests == "3" ~ 3,
support_arrests == "4" ~ 4,
support_arrests == "5" ~ 5,
support_arrests == "6" ~ 6,
support_arrests == "7" ~ 7,
support_arrests == "8" ~ 8,
support_arrests == "9" ~ 9,
support_arrests == "10 (полностью оправданно)" ~ 10,
# support_arrests == "Затрудняюсь ответить" ~ 11,
# support_arrests == "Отказ от ответа" ~ 12,
TRUE ~ NA_real_
),
### Protesters' Description ###
across(
c(aggressive, lawabiding, trustworthy, dangerous, think_about_me),  # List of the variables to transform
~ case_when(
str_trim(.) == "Абсолютно не применимо" ~ 1,
str_trim(.) == "Скорее не применимо" ~ 2,
str_trim(.) == "Частично применимо" ~ 3,
str_trim(.) == "Полностью применимо" ~ 4,
TRUE ~ NA_real_  # Treat any other response as NA
),
.names = "protesters_are_{col}"  # New variable naming pattern
),
### Protest Description ###
across(c(is_violent, is_lawabiding, is_lifethreatening),  # List of the variables to transform,
~ case_when(
str_trim(.) == "Нет" ~ 1,
str_trim(.) == "Скорее нет" ~ 2,
str_trim(.) == "Скорее да" ~ 3,
str_trim(.) == "Да" ~ 4,
TRUE ~ NA_real_  # Treat any other response as NA
)
)
)
data <- long_data %>% select(c(support_arrests, support_arrests_num, support_protesters_numeric, support_protesters_demands,
support_protesters_demands_numeric, protest_type, protest_actions, authorisation, protesters_are_aggressive, protesters_are_lawabiding,
protesters_are_trustworthy, protesters_are_think_about_me,
protesters_are_dangerous, is_violent, is_lawabiding, is_lifethreatening))
m_violent <- lm(is_violent ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
m_lawabiding_protest <- lm(is_lawabiding ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
m_is_lifethreatening <- lm(is_lifethreatening ~ factor(authorisation)*factor(protest_type) + factor(protest_actions), data = data)
models2 = list(m_violent, m_lawabiding_protest, m_is_lifethreatening)
stargazer(models2,
header=FALSE,
title="Protest Described As",
digits=2,
no.space = TRUE,
dep.var.labels = c("Violent", "Law-Abiding", "Lifethreatening"),
covariate.labels = c("authorisation (unauthorised)", "type (political)", "actions (demonstation)", "auth x type")
)
View(long_data)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
results = 'asis')
Sys.getlocale()
# Set this to a locale that supports Cyrillic, for example, on Windows
Sys.setlocale("LC_ALL", "Russian")
##### Set Up #####
pacman::p_load(tidyverse, readr, broom,
lubridate, gt, gtsummary, survey, readxl,
gridExtra, knitr, haven, nnet, stargazer, kableExtra, gplots)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
results = 'asis')
Sys.getlocale()
# Set this to a locale that supports Cyrillic, for example, on Windows
Sys.setlocale("LC_ALL", "Russian")
##### Set Up #####
pacman::p_load(tidyverse, readr, broom,
lubridate, gt, gtsummary, survey, readxl,
gridExtra, knitr, haven, nnet, stargazer, kableExtra, gplots)
survey_sept <- read_csv("data/surveys/survey_sept_2024_with_weights.csv",
locale = locale(encoding = "UTF-8"))
long_data <- survey_sept %>%
### Support protesters actions ###
rename(age_cat = age_group,
aggressive = DV1C_1,
lawabiding = DV1C_2,
dangerous = DV1C_3,
trustworthy = DV1C_4,
think_about_me = DV1C_5,
is_violent = DV1D_1,
is_lawabiding = DV1D_2,
is_lifethreatening = DV1D_3) %>%
pivot_longer(
cols = contains("Group"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "support_protesters_actions"  # New column for the values
) %>%
filter(!is.na(support_protesters_actions)) %>%
mutate(
group_number = as.numeric(sub(".*?([0-9])$", "\\1", fact_id)),  # Extract group numbers,
protest_type = case_when(
group_number %in% c(1, 2, 3, 4) ~ "environmental",
group_number %in% c(5, 6, 7, 8) ~ "political",
),
authorisation = case_when(
group_number %in% c(6, 5, 2, 1) ~ "authorised",
group_number %in% c(8, 7, 4, 3) ~ "unauthorised"
),
protest_actions = case_when(
group_number %% 2 == 1 ~ "demonstration",    # Odd group_numbers represent 'demonstration'
group_number %% 2 == 0 ~ "clash_with_police" # Even group_numbers represent 'clash_with_police'
),
support_protesters_actions = str_trim(support_protesters_actions),
support_protesters_numeric = case_when(
support_protesters_actions == "Oпределенно, не одобряю" ~ 1,
support_protesters_actions == "Cкорее, не одобряю" ~ 2,
support_protesters_actions == "Cкорее, одобряю" ~ 3,
support_protesters_actions == "Определенно, одобряю" ~ 4,
#support_protesters_actions == "Затрудняюсь ответить" ~ 5,
#support_protesters_actions == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Protesters' Demands ###
support_protesters_demands = str_trim(DV1A),
support_protesters_demands_numeric = case_when(
support_protesters_demands == "Oпределенно, не одобряю" ~ 1,
support_protesters_demands == "Cкорее, не одобряю" ~ 2,
support_protesters_demands == "Cкорее, одобряю" ~ 3,
support_protesters_demands == "Определенно, одобряю" ~ 4,
#support_protesters_demands == "Затрудняюсь ответить" ~ 5,
#support_protesters_demands == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Arrests ###
support_arrests = str_trim(DV1B),
support_arrests_num = case_when(
support_arrests == "0 (совершенно не оправданно)" ~ 0,
support_arrests == "1" ~ 1,
support_arrests == "2" ~ 2,
support_arrests == "3" ~ 3,
support_arrests == "4" ~ 4,
support_arrests == "5" ~ 5,
support_arrests == "6" ~ 6,
support_arrests == "7" ~ 7,
support_arrests == "8" ~ 8,
support_arrests == "9" ~ 9,
support_arrests == "10 (полностью оправданно)" ~ 10,
# support_arrests == "Затрудняюсь ответить" ~ 11,
# support_arrests == "Отказ от ответа" ~ 12,
TRUE ~ NA_real_
),
### Protesters' Description ###
across(
c(aggressive, lawabiding, trustworthy, dangerous, think_about_me),  # List of the variables to transform
~ case_when(
str_trim(.) == "Абсолютно не применимо" ~ 1,
str_trim(.) == "Скорее не применимо" ~ 2,
str_trim(.) == "Частично применимо" ~ 3,
str_trim(.) == "Полностью применимо" ~ 4,
TRUE ~ NA_real_  # Treat any other response as NA
),
.names = "protesters_are_{col}"  # New variable naming pattern
),
### Protest Description ###
across(c(is_violent, is_lawabiding, is_lifethreatening),  # List of the variables to transform,
~ case_when(
str_trim(.) == "Нет" ~ 1,
str_trim(.) == "Скорее нет" ~ 2,
str_trim(.) == "Скорее да" ~ 3,
str_trim(.) == "Да" ~ 4,
TRUE ~ NA_real_  # Treat any other response as NA
)
)
)
data <- long_data %>% select(c(support_arrests, support_arrests_num, support_protesters_numeric, support_protesters_demands,
support_protesters_demands_numeric, protest_type, protest_actions, authorisation, protesters_are_aggressive, protesters_are_lawabiding,
protesters_are_trustworthy, protesters_are_think_about_me,
protesters_are_dangerous, is_violent, is_lawabiding, is_lifethreatening,
weight_manually_calculated))
test_rand_type <- glm(factor(protest_type) ~ age + gender + university_education,
family=binomial, data=long_data)
test_rand_actions <- glm(factor(protest_actions) ~ age + gender + university_education,
family=binomial, data=long_data)
test_rand_authorisation <- glm(factor(authorisation) ~ age + gender + university_education,
family=binomial, data=long_data)
stargazer(test_rand_type,test_rand_actions, test_rand_authorisation,
header=FALSE,
title="Randomisation Check",
digits=2)
# m1 <- lm(as.numeric(factor(authorisation)) ~ protest_type, data)
# summary(m1)
ggplot(data, aes(x = support_protesters_numeric, fill = protest_type)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs(title = "Distribution of Support Protesters' Actions by Protest Type",
x = "Support Protesters Numeric",
y = "Count") +
scale_fill_manual(values = c("blue", "red")) + # Customize the colors as needed
theme_minimal()
group1 <- data %>%
filter(protest_type == "environmental") %>%
pull(support_protesters_numeric)
group2 <- data %>%
filter(protest_type == "political") %>%
pull(support_protesters_numeric)
# t.test(group1, group2)
# mean(group1, na.rm=T) - mean(group2, na.rm=T)
plotmeans(formula = support_protesters_numeric ~ protest_type,  #
data = data,           # the data frame
xlab = "Protest type",  # x-axis label
ylab = "Support for protesters' activities",          # y-axis label
n.label = T              # (don't) display sample size
)
ggplot(data, aes(x = support_protesters_demands_numeric, fill = authorisation)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs(title = "Distribution of Support Protesters' Demands by Protest Authorisation",
x = "Support Protesters Numeric",
y = "Count") +
scale_fill_manual(values = c("blue", "red")) + # Customize the colors as needed
theme_minimal()
group1 <- data %>%
filter(authorisation == "authorised") %>%
pull(support_protesters_demands_numeric)
group2 <- data %>%
filter(authorisation == "unauthorised") %>%
pull(support_protesters_demands_numeric)
# t.test(group1, group2)
# mean(group1, na.rm=T) - mean(group2, na.rm=T)
plotmeans(formula = support_protesters_demands_numeric ~ authorisation,  #
data = data,           # the data frame
xlab = "Protest type",  # x-axis label
ylab = "Support for protesters' demands",          # y-axis label
n.label = T              # (don't) display sample size
)
?plotmeans
View(data)
View(survey_sept)
test_rand_type <- glm(factor(protest_type) ~ age + gender + university_education,
family=binomial, data=long_data)
test_rand_actions <- glm(factor(protest_actions) ~ age + gender + university_education,
family=binomial, data=long_data)
test_rand_authorisation <- glm(factor(authorisation) ~ age + gender + university_education,
family=binomial, data=long_data)
stargazer(test_rand_type,test_rand_actions, test_rand_authorisation,
header=FALSE,
title="Randomisation Check",
digits=2)
test_rand_type <- glm(factor(protest_type) ~ age + gender + university_education,
family=binomial, data=long_data)
test_rand_actions <- glm(factor(protest_actions) ~ age + gender + university_education,
family=binomial, data=long_data)
test_rand_authorisation <- glm(factor(authorisation) ~ age + gender + university_education,
family=binomial, data=long_data)
stargazer(test_rand_type,test_rand_actions, test_rand_authorisation,
header=FALSE,
title="Randomisation Check",
digits=2)
summary(test_rand_type)
m1 <- lm(as.numeric(factor(authorisation)) ~ protest_type + authorisation + protest_actions, data)
summary(m1)
ggplot(data, aes(x = support_protesters_numeric, fill = protest_type)) +
geom_histogram(alpha = 0.5, position = "dodge", bins = 30) +
labs(title = "Distribution of Support Protesters' Actions by Protest Type",
x = "Support Protesters Numeric",
y = "Count") +
scale_fill_manual(values = c("blue", "red")) + # Customize the colors as needed
theme_minimal()
plotmeans(formula = support_protesters_numeric ~ protest_type + authorisation,  #
data = data,           # the data frame
xlab = "Protest type",  # x-axis label
ylab = "Support for protesters' activities",          # y-axis label
n.label = T              # (don't) display sample size
)
plotmeans(formula = support_protesters_numeric ~ protest_type,  #
data = data,           # the data frame
xlab = "Protest type",  # x-axis label
ylab = "Support for protesters' activities",          # y-axis label
n.label = T              # (don't) display sample size
)
m1 <- lm(as.numeric(factor(authorisation)) ~ protest_type + authorisation + protest_actions, data)
summary(m1)
m1 <- lm(as.numeric(support_protesters_numeric ~ protest_type + authorisation + protest_actions, data)
summary(m1)
m1 <- lm(support_protesters_numeric ~ protest_type + authorisation + protest_actions, data)
summary(m1)
m1 <- lm(support_protesters_numeric ~ protest_type, data)
summary(m1)
# t.test(group1, group2)
mean(group1, na.rm=T) - mean(group2, na.rm=T)
# t.test(group1, group2)
mean(group1, na.rm=T) - mean(group2, na.rm=T)
t.test(group1, group2)
