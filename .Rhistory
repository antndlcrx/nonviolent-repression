support_arrests == "4" ~ 4,
support_arrests == "5" ~ 5,
support_arrests == "6" ~ 6,
support_arrests == "7" ~ 7,
support_arrests == "8" ~ 8,
support_arrests == "9" ~ 9,
support_arrests == "10 (полностью оправданно)" ~ 10,
# support_arrests == "Затрудняюсь ответить" ~ 0,
# support_arrests == "Отказ от ответа" ~ 0,
TRUE ~ NA_real_
),
support_arrests_binary = case_when(
support_arrests_num <=5 ~ 0,
support_arrests_num > 5 ~ 1,
),
### Protesters' Description ###
across(
c(aggressive, lawabiding, trustworthy, dangerous, think_about_me),  # List of the variables to transform
~ case_when(
str_trim(.) == "Абсолютно не применимо" ~ 0,
str_trim(.) == "Скорее не применимо" ~ 0,
str_trim(.) == "Частично применимо" ~ 1,
str_trim(.) == "Полностью применимо" ~ 1,
TRUE ~ NA_real_  # Treat any other response as 0
),
.names = "protesters_are_{col}"  # New variable naming pattern
),
### Protest Description ###
across(c(is_violent, is_lawabiding, is_lifethreatening),  # List of the variables to transform,
~ case_when(
str_trim(.) == "Нет" ~ 0,
str_trim(.) == "Скорее нет" ~ 0,
str_trim(.) == "Скорее да" ~ 1,
str_trim(.) == "Да" ~ 1,
TRUE ~ NA_real_  # Treat any other response as 0
)
)
)
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE,
results = 'asis')
Sys.getlocale()
# Set this to a locale that supports Cyrillic, for example, on Windows
Sys.setlocale("LC_ALL", "Russian")
##### Set Up #####
pacman::p_load(tidyverse, readr, broom,
lubridate, gt, gtsummary, survey, readxl,
gridExtra, knitr, haven, nnet, stargazer, kableExtra, gplots,
mice, xtable)
survey_sept <- read_csv("data/surveys/survey_sept_2024_with_weights.csv",
locale = locale(encoding = "UTF-8"))
long_data <- survey_sept %>%
### Support protesters actions ###
rename(age_cat = age_group,
aggressive = DV1C_1,
lawabiding = DV1C_2,
dangerous = DV1C_3,
trustworthy = DV1C_4,
think_about_me = DV1C_5,
is_violent = DV1D_1,
is_lawabiding = DV1D_2,
is_lifethreatening = DV1D_3) %>%
pivot_longer(
cols = contains("Group"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "support_protesters_actions"  # New column for the values
) %>%
filter(!is.na(support_protesters_actions)) %>%
mutate(
group_number = as.numeric(sub(".*?([0-9])$", "\\1", fact_id)),  # Extract group numbers,
protest_type = case_when(
group_number %in% c(1, 2, 3, 4) ~ "environmental",
group_number %in% c(5, 6, 7, 8) ~ "political",
),
authorisation = case_when(
group_number %in% c(6, 5, 2, 1) ~ "authorised",
group_number %in% c(8, 7, 4, 3) ~ "unauthorised"
),
protest_actions = case_when(
group_number %% 2 == 1 ~ "demonstration",    # Odd group_numbers represent 'demonstration'
group_number %% 2 == 0 ~ "clash_with_police" # Even group_numbers represent 'clash_with_police'
),
support_protesters_actions = str_trim(support_protesters_actions),
support_protesters_numeric = case_when(
support_protesters_actions == "Oпределенно, не одобряю" ~ 1,
support_protesters_actions == "Cкорее, не одобряю" ~ 2,
support_protesters_actions == "Cкорее, одобряю" ~ 3,
support_protesters_actions == "Определенно, одобряю" ~ 4,
#support_protesters_actions == "Затрудняюсь ответить" ~ 5,
#support_protesters_actions == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
support_protesters_binary = case_when(
support_protesters_actions == "Oпределенно, не одобряю" ~ 0,
support_protesters_actions == "Cкорее, не одобряю" ~ 0,
support_protesters_actions == "Cкорее, одобряю" ~ 1,
support_protesters_actions == "Определенно, одобряю" ~ 1,
# support_protesters_actions == "Затрудняюсь ответить" ~ 0,
# support_protesters_actions == "Отказ от ответа" ~ 0,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Protesters' Demands ###
support_protesters_demands = str_trim(DV1A),
support_protesters_demands_numeric = factor(case_when(
support_protesters_demands == "Oпределенно, не одобряю" ~ 1,
support_protesters_demands == "Cкорее, не одобряю" ~ 2,
support_protesters_demands == "Cкорее, одобряю" ~ 3,
support_protesters_demands == "Определенно, одобряю" ~ 4,
#support_protesters_demands == "Затрудняюсь ответить" ~ 5,
#support_protesters_demands == "Отказ от ответа" ~ 6,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
)),
support_protesters_demands_binary = case_when(
support_protesters_demands == "Oпределенно, не одобряю" ~ 0,
support_protesters_demands == "Cкорее, не одобряю" ~ 0,
support_protesters_demands == "Cкорее, одобряю" ~ 1,
support_protesters_demands == "Определенно, одобряю" ~ 1,
# support_protesters_demands == "Затрудняюсь ответить" ~ 0,
# support_protesters_demands == "Отказ от ответа" ~ 0,
TRUE ~ NA_real_ # Turn refuse to NA (no NAs in the data before transformation)
),
### Support Arrests ###
support_arrests = str_trim(DV1B),
support_arrests_num = case_when(
support_arrests == "0 (совершенно не оправданно)" ~ 0,
support_arrests == "1" ~ 1,
support_arrests == "2" ~ 2,
support_arrests == "3" ~ 3,
support_arrests == "4" ~ 4,
support_arrests == "5" ~ 5,
support_arrests == "6" ~ 6,
support_arrests == "7" ~ 7,
support_arrests == "8" ~ 8,
support_arrests == "9" ~ 9,
support_arrests == "10 (полностью оправданно)" ~ 10,
# support_arrests == "Затрудняюсь ответить" ~ 0,
# support_arrests == "Отказ от ответа" ~ 0,
TRUE ~ NA_real_
),
support_arrests_binary = case_when(
support_arrests_num <=5 ~ 0,
support_arrests_num > 5 ~ 1,
),
### Protesters' Description ###
across(
c(aggressive, lawabiding, trustworthy, dangerous, think_about_me),  # List of the variables to transform
~ case_when(
str_trim(.) == "Абсолютно не применимо" ~ 0,
str_trim(.) == "Скорее не применимо" ~ 0,
str_trim(.) == "Частично применимо" ~ 1,
str_trim(.) == "Полностью применимо" ~ 1,
TRUE ~ NA_real_  # Treat any other response as 0
),
.names = "protesters_are_{col}"  # New variable naming pattern
),
### Protest Description ###
across(c(is_violent, is_lawabiding, is_lifethreatening),  # List of the variables to transform,
~ case_when(
str_trim(.) == "Нет" ~ 0,
str_trim(.) == "Скорее нет" ~ 0,
str_trim(.) == "Скорее да" ~ 1,
str_trim(.) == "Да" ~ 1,
TRUE ~ NA_real_  # Treat any other response as 0
)
)
)
data <- long_data %>% select(c(protest_type, protest_actions, authorisation, protesters_are_aggressive, protesters_are_lawabiding,
protesters_are_trustworthy, protesters_are_think_about_me,
protesters_are_dangerous, is_violent, is_lawabiding, is_lifethreatening,
weight_manually_calculated, support_arrests_binary,
support_protesters_demands_binary, support_protesters_binary,age, gender, university_education))
#
# data <- data %>%
#   mutate(across(-weight_manually_calculated, as.factor))
imputed_data <- mice(long_data, m=5, maxit=10, method = "logreg", printFlag = FALSE)
#
# data <- data %>%
#   mutate(across(-weight_manually_calculated, as.factor))
imputed_data <- mice(long_data, m=5, maxit=10, printFlag = FALSE)
#
# data <- data %>%
#   mutate(across(-weight_manually_calculated, as.factor))
imputed_data <- mice(data, m=5, maxit=10, method = "logreg", printFlag = FALSE)
#plot(imputed_data)
survey_july <- read_csv("data/surveys/survey_july_with_weights.csv") %>%
pivot_longer(
cols = contains("DV1"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "how_justified"  # New column for the values
) %>%
filter(!is.na(how_justified)) %>%
mutate(fact_id = sub(".*([A-Za-z])$", "\\1", fact_id),  # Extract group numbers,
not_repressive_num = case_when(
DV2 == "Совсем не репрессивными (10)" ~ 1,
DV2 == "9" ~ 2,
DV2 == "8" ~ 3,
DV2 == "7" ~ 4,
DV2 == "6" ~ 5,
DV2 == "5" ~ 6,
DV2 == "4" ~ 7,
DV2 == "3" ~ 8,
DV2 == "2" ~ 9,
DV2 == "Крайне репрессивными (1)" ~ 10,
# DV2 == "Отказ от ответа" ~ 5,
# DV2 == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_
),
not_repressive_bin = case_when(
DV2 %in% c("Совсем не репрессивными (10)", "9", "8", "7", "6") ~ 0,
DV2 %in% c("Крайне репрессивными (1)","5", "4", "3", "2") ~ 1,
TRUE ~ NA_real_),
how_justified_num = case_when(
how_justified == "Полностью оправданы (10)" ~ 10,
how_justified == "9" ~ 9,
how_justified == "8" ~ 8,
how_justified == "7" ~ 7,
how_justified == "6" ~ 6,
how_justified == "5" ~ 5,
how_justified == "4" ~ 4,
how_justified == "3" ~ 3,
how_justified == "2" ~ 2,
how_justified == "Совершенно не оправданы (1)" ~ 1,
# how_justified == "Отказ от ответа" ~ 5,
# how_justified == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_),
how_justified_bin = case_when(
how_justified %in% c("Полностью оправданы (10)", "9", "8", "7", "6") ~ 1,
how_justified %in% c("5", "4", "3", "2", "Совершенно не оправданы (1)") ~ 0,
TRUE ~ NA_real_
),
denied_twice = case_when(
fact_id %in% c("A", "B", "C", "D") ~ "once",
TRUE ~ "twice"
),
authority = case_when(
fact_id %in% c("A", "B", "E", "F") ~ "admin",
TRUE ~ "police"
),
grievance = case_when(
fact_id %in% c("A", "C", "E", "H") ~ "historical",
TRUE ~ "corruption"
)
) %>%
select(age, gender, university_educaiton, not_repressive_bin, how_justified_bin,
denied_twice, authority, grievance)
survey_july <- read_csv("data/surveys/survey_july_with_weights.csv") %>%
pivot_longer(
cols = contains("DV1"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "how_justified"  # New column for the values
) %>%
filter(!is.na(how_justified)) %>%
mutate(fact_id = sub(".*([A-Za-z])$", "\\1", fact_id),  # Extract group numbers,
not_repressive_num = case_when(
DV2 == "Совсем не репрессивными (10)" ~ 1,
DV2 == "9" ~ 2,
DV2 == "8" ~ 3,
DV2 == "7" ~ 4,
DV2 == "6" ~ 5,
DV2 == "5" ~ 6,
DV2 == "4" ~ 7,
DV2 == "3" ~ 8,
DV2 == "2" ~ 9,
DV2 == "Крайне репрессивными (1)" ~ 10,
# DV2 == "Отказ от ответа" ~ 5,
# DV2 == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_
),
not_repressive_bin = case_when(
DV2 %in% c("Совсем не репрессивными (10)", "9", "8", "7", "6") ~ 0,
DV2 %in% c("Крайне репрессивными (1)","5", "4", "3", "2") ~ 1,
TRUE ~ NA_real_),
how_justified_num = case_when(
how_justified == "Полностью оправданы (10)" ~ 10,
how_justified == "9" ~ 9,
how_justified == "8" ~ 8,
how_justified == "7" ~ 7,
how_justified == "6" ~ 6,
how_justified == "5" ~ 5,
how_justified == "4" ~ 4,
how_justified == "3" ~ 3,
how_justified == "2" ~ 2,
how_justified == "Совершенно не оправданы (1)" ~ 1,
# how_justified == "Отказ от ответа" ~ 5,
# how_justified == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_),
how_justified_bin = case_when(
how_justified %in% c("Полностью оправданы (10)", "9", "8", "7", "6") ~ 1,
how_justified %in% c("5", "4", "3", "2", "Совершенно не оправданы (1)") ~ 0,
TRUE ~ NA_real_
),
denied_twice = case_when(
fact_id %in% c("A", "B", "C", "D") ~ "once",
TRUE ~ "twice"
),
authority = case_when(
fact_id %in% c("A", "B", "E", "F") ~ "admin",
TRUE ~ "police"
),
grievance = case_when(
fact_id %in% c("A", "C", "E", "H") ~ "historical",
TRUE ~ "corruption"
)
)
View(survey_july)
survey_july <- read_csv("data/surveys/survey_july_with_weights.csv") %>%
pivot_longer(
cols = contains("DV1"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "how_justified"  # New column for the values
) %>%
filter(!is.na(how_justified)) %>%
mutate(fact_id = sub(".*([A-Za-z])$", "\\1", fact_id),  # Extract group numbers,
not_repressive_num = case_when(
DV2 == "Совсем не репрессивными (10)" ~ 1,
DV2 == "9" ~ 2,
DV2 == "8" ~ 3,
DV2 == "7" ~ 4,
DV2 == "6" ~ 5,
DV2 == "5" ~ 6,
DV2 == "4" ~ 7,
DV2 == "3" ~ 8,
DV2 == "2" ~ 9,
DV2 == "Крайне репрессивными (1)" ~ 10,
# DV2 == "Отказ от ответа" ~ 5,
# DV2 == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_
),
not_repressive_bin = case_when(
DV2 %in% c("Совсем не репрессивными (10)", "9", "8", "7", "6") ~ 0,
DV2 %in% c("Крайне репрессивными (1)","5", "4", "3", "2") ~ 1,
TRUE ~ NA_real_),
how_justified_num = case_when(
how_justified == "Полностью оправданы (10)" ~ 10,
how_justified == "9" ~ 9,
how_justified == "8" ~ 8,
how_justified == "7" ~ 7,
how_justified == "6" ~ 6,
how_justified == "5" ~ 5,
how_justified == "4" ~ 4,
how_justified == "3" ~ 3,
how_justified == "2" ~ 2,
how_justified == "Совершенно не оправданы (1)" ~ 1,
# how_justified == "Отказ от ответа" ~ 5,
# how_justified == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_),
how_justified_bin = case_when(
how_justified %in% c("Полностью оправданы (10)", "9", "8", "7", "6") ~ 1,
how_justified %in% c("5", "4", "3", "2", "Совершенно не оправданы (1)") ~ 0,
TRUE ~ NA_real_
),
denied_twice = case_when(
fact_id %in% c("A", "B", "C", "D") ~ "once",
TRUE ~ "twice"
),
authority = case_when(
fact_id %in% c("A", "B", "E", "F") ~ "admin",
TRUE ~ "police"
),
grievance = case_when(
fact_id %in% c("A", "C", "E", "H") ~ "historical",
TRUE ~ "corruption"
)
) %>%
select(age, gender, university_education, not_repressive_bin, how_justified_bin,
denied_twice, authority, grievance)
imputed_data <- mice(survey_july, m=5, maxit=10, method = "logreg", printFlag = FALSE)
# Define the dependent variables and their respective formulas
pooled_models <- list(
"Not Repressive (Unweighted)" = with(
imputed_data,
lm(not_repressive_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education)
),
"Not Repressive (Weighted)" = with(
imputed_data,
lm(not_repressive_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education, weights = weight_poststratify)
),
"How Justified (Unweighted)" = with(
imputed_data,
lm(how_justified_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education)
),
"How Justified (Weighted)" = with(
imputed_data,
lm(how_justified_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education, weights = weight_poststratify)
)
)
survey_july <- read_csv("data/surveys/survey_july_with_weights.csv") %>%
pivot_longer(
cols = contains("DV1"),  # Dynamically select columns containing "Group"
names_to = "fact_id",      # New column for the group names
values_to = "how_justified"  # New column for the values
) %>%
filter(!is.na(how_justified)) %>%
mutate(fact_id = sub(".*([A-Za-z])$", "\\1", fact_id),  # Extract group numbers,
not_repressive_num = case_when(
DV2 == "Совсем не репрессивными (10)" ~ 1,
DV2 == "9" ~ 2,
DV2 == "8" ~ 3,
DV2 == "7" ~ 4,
DV2 == "6" ~ 5,
DV2 == "5" ~ 6,
DV2 == "4" ~ 7,
DV2 == "3" ~ 8,
DV2 == "2" ~ 9,
DV2 == "Крайне репрессивными (1)" ~ 10,
# DV2 == "Отказ от ответа" ~ 5,
# DV2 == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_
),
not_repressive_bin = case_when(
DV2 %in% c("Совсем не репрессивными (10)", "9", "8", "7", "6") ~ 0,
DV2 %in% c("Крайне репрессивными (1)","5", "4", "3", "2") ~ 1,
TRUE ~ NA_real_),
how_justified_num = case_when(
how_justified == "Полностью оправданы (10)" ~ 10,
how_justified == "9" ~ 9,
how_justified == "8" ~ 8,
how_justified == "7" ~ 7,
how_justified == "6" ~ 6,
how_justified == "5" ~ 5,
how_justified == "4" ~ 4,
how_justified == "3" ~ 3,
how_justified == "2" ~ 2,
how_justified == "Совершенно не оправданы (1)" ~ 1,
# how_justified == "Отказ от ответа" ~ 5,
# how_justified == "Затрудняюсь ответить" ~ 5,
TRUE ~ NA_real_),
how_justified_bin = case_when(
how_justified %in% c("Полностью оправданы (10)", "9", "8", "7", "6") ~ 1,
how_justified %in% c("5", "4", "3", "2", "Совершенно не оправданы (1)") ~ 0,
TRUE ~ NA_real_
),
denied_twice = case_when(
fact_id %in% c("A", "B", "C", "D") ~ "once",
TRUE ~ "twice"
),
authority = case_when(
fact_id %in% c("A", "B", "E", "F") ~ "admin",
TRUE ~ "police"
),
grievance = case_when(
fact_id %in% c("A", "C", "E", "H") ~ "historical",
TRUE ~ "corruption"
)
) %>%
select(age, gender, university_education, not_repressive_bin, how_justified_bin,
denied_twice, authority, grievance, weight_poststratify)
imputed_data <- mice(survey_july, m=5, maxit=10, method = "logreg", printFlag = FALSE)
# Define the dependent variables and their respective formulas
pooled_models <- list(
"Not Repressive (Unweighted)" = with(
imputed_data,
lm(not_repressive_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education)
),
"Not Repressive (Weighted)" = with(
imputed_data,
lm(not_repressive_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education, weights = weight_poststratify)
),
"How Justified (Unweighted)" = with(
imputed_data,
lm(how_justified_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education)
),
"How Justified (Weighted)" = with(
imputed_data,
lm(how_justified_bin ~ factor(authority) + factor(grievance) +
factor(denied_twice) + gender + age + university_education, weights = weight_poststratify)
)
)
# Pool results and format the output
results_table <- purrr::imap_dfr(pooled_models, ~ {
summary_data <- summary(pool(.x))
tibble(
Term = summary_data$term,
Model = .y,
Estimate = round(summary_data$estimate, 2),
SE = round(summary_data$std.error, 2),
t.value = round(summary_data$statistic, 2)
) %>%
mutate(Result = paste0(Estimate, " [", SE, "; ", t.value, "]"))
}) %>%
select(Term, Model, Result) %>%
pivot_wider(names_from = Model, values_from = Result) %>%
filter(Term != "(Intercept)") %>% # Exclude the intercept
mutate(
Term = case_when(
Term == "factor(authority)1" ~ "Authority (Yes)",
Term == "factor(grievance)1" ~ "Grievance (Yes)",
Term == "factor(denied_twice)1" ~ "Denied Twice (Yes)",
Term == "genderWoman" ~ "Gender (Woman)",
Term == "university_educationBA+" ~ "University Education (BA+)",
TRUE ~ Term
)
)
# Create the xtable with the formatted results
xtable_table <- xtable(results_table, align = c("l", "l", "c", "c", "c", "c"))
# Define the note to add below the table
note <- "Note: Estimates are pooled from multiple imputed datasets and displayed as Estimate [SE; t-value]."
# Add the note below the table using `add.to.row`
add_to_row <- list(pos = list(nrow(results_table)), command = paste0("\\hline\n\\multicolumn{5}{l}{", note, "} \\\\\n"))
# Print the table with xtable
print.xtable(xtable_table,
include.rownames = FALSE,
comment = FALSE,
add.to.row = add_to_row)
