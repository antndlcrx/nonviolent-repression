acled <- read_csv("data/processed_data/acled_protest_krml_indicator.csv")
#
#   mutate(docid = paste("text", row_number(), sep = ""))
corp_acled = corpus(acled, text_field = "notes",
docid_field = "event_id_cnty")
# tokenize texts (copying code from acled_keyatm.R)
toks_acled = tokens(corp_acled, remove_punct = TRUE, remove_number = TRUE) %>%
tokens_remove(pattern = c(stopwords("en"), "protest*", "size", "=")) %>%
tokens_wordstem() # stem the keywords to make it easier to use later
dfmt_acled = dfm(toks_acled) %>%
dfm_trim(max_termfreq = 0.80, termfreq_type = "prop") #filter out most common words
keyATM_docs <- keyATM_read(texts = dfmt_acled)
summary(keyATM_docs)
keywords_with_war = list(cultural = c('histor','tear','demolish','commemor',
'center','museum','heritag','council',
'street','demolit','cultur'),
economic = c('wage','system','econom','compani',
'nationwid','annual','anti-capitalist',
'fairer','paid','promis','pay','land',
'health','increas','bonus',
'payment','left','work'),
environmental = c('park','wast','zone',
'forest','green','road','tree',
'expans','villag','block','cut',
'ecolog','pollut'),
legal = c('amend','term','constitut','propos',
'presidenti','extend',
'limit','law'),
political = c('arrest','releas','governor',
'polit','sentenc',
'assassin','attempt','administr',
'fsb','ldpr','jail','murder','motiv',
'journalist','involv','denounc','critic'),
social = c('vaccin','public','space','certif',
'shop','restaur','mall','mandatori',
'farm','school','interest'),
war = c('ukrain', 'war', 'invas', 'invad', 'militari', 'annex'))
out <- keyATM(
docs              = keyATM_docs,    # text input
no_keyword_topics = 1,              # number of topics without keyword
keywords          = keywords_with_war,       # keywords
model             = "base",         # select the model
options           = list(seed = 250)
)
# save(out, file = "acled_keyatm_base_2711.RData")
load("outputs/acled_keyatm_base_2711.RData")
##### model fit plots (not sure how to interpret them)
key_viz <- visualize_keywords(docs = keyATM_docs, keywords = keywords_with_war)
key_viz
##### model fit plots (not sure how to interpret them)
key_viz <- visualize_keywords(docs = keyATM_docs, keywords = keywords_with_war)
key_viz
acled <- read_csv("data/processed_data/acled_protest_krml_indicator.csv")
# %>%
#   mutate(docid = paste("text", row_number(), sep = ""))
corp_acled = corpus(acled, text_field = "notes",
docid_field = "event_id_cnty")
# tokenize texts (copying code from acled_keyatm.R)
toks_acled = tokens(corp_acled, remove_punct = TRUE, remove_number = TRUE) %>%
tokens_remove(pattern = c(stopwords("en"), "protest*", "size", "=")) %>%
tokens_wordstem() # stem the keywords to make it easier to use later
dfmt_acled = dfm(toks_acled) %>%
dfm_trim(max_termfreq = 0.80, termfreq_type = "prop") #filter out most common words
keyATM_docs <- keyATM_read(texts = dfmt_acled)
summary(keyATM_docs)
keywords_with_war = list(cultural = c('histor','tear','demolish','commemor',
'center','museum','heritag','council',
'street','demolit','cultur'),
economic = c('wage','system','econom','compani',
'nationwid','annual','anti-capitalist',
'fairer','paid','promis','pay','land',
'health','increas','bonus',
'payment','left','work'),
environmental = c('park','wast','zone',
'forest','green','road','tree',
'expans','villag','block','cut',
'ecolog','pollut'),
legal = c('amend','term','constitut','propos',
'presidenti','extend',
'limit','law'),
political = c('arrest','releas','governor',
'polit','sentenc',
'assassin','attempt','administr',
'fsb','ldpr','jail','murder','motiv',
'journalist','involv','denounc','critic'),
social = c('vaccin','public','space','certif',
'shop','restaur','mall','mandatori',
'farm','school','interest'),
war = c('ukrain', 'war', 'invas', 'invad', 'militari', 'annex'))
# save(out, file = "acled_keyatm_base_2711.RData")
load("outputs/acled_keyatm_base_2711.RData")
key_viz <- visualize_keywords(docs = keyATM_docs, keywords = keywords_with_war)
key_viz
acled <- read_csv("data/processed_data/acled_protest_krml_indicator.csv")
# %>%
#   mutate(docid = paste("text", row_number(), sep = ""))
corp_acled = corpus(acled, text_field = "notes",
docid_field = "event_id_cnty")
# tokenize texts (copying code from acled_keyatm.R)
toks_acled = tokens(corp_acled, remove_punct = TRUE, remove_number = TRUE) %>%
tokens_remove(pattern = c(stopwords("en"), "protest*", "size", "=")) %>%
tokens_wordstem() # stem the keywords to make it easier to use later
dfmt_acled = dfm(toks_acled) %>%
dfm_trim(max_termfreq = 0.80, termfreq_type = "prop") #filter out most common words
keyATM_docs <- keyATM_read(texts = dfmt_acled)
summary(keyATM_docs)
##### Use KeyATM to assign protest labels from keywords #####
## prepare keywords
# taking keywords from the acled_keyatm.R file
keywords_with_war = list(cultural = c('histor','tear','demolish','commemor',
'center','museum','heritag','council',
'street','demolit','cultur'),
economic = c('wage','system','econom','compani',
'nationwid','annual','anti-capitalist',
'fairer','paid','promis','pay','land',
'health','increas','bonus',
'payment','left','work'),
environmental = c('park','wast','zone',
'forest','green','road','tree',
'expans','villag','block','cut',
'ecolog','pollut'),
legal = c('amend','term','constitut','propos',
'presidenti','extend',
'limit','law'),
political = c('arrest','releas','governor',
'polit','sentenc',
'assassin','attempt','administr',
'fsb','ldpr','jail','murder','motiv',
'journalist','involv','denounc','critic'),
social = c('vaccin','public','space','certif',
'shop','restaur','mall','mandatori',
'farm','school','interest'),
war = c('ukrain', 'war', 'invas', 'invad', 'militari', 'annex'))
# save(out, file = "acled_keyatm_base_2711.RData")
load("outputs/acled_keyatm_base_2711.RData")
top_words(out, 15)
##### model fit plots (not sure how to interpret them)
key_viz <- visualize_keywords(docs = keyATM_docs, keywords = keywords_with_war)
key_viz
plot_topicprop(out, show_topic = 1:7)
fig_modelfit <- plot_modelfit(out)
fig_modelfit
plot_alpha(out)
plot_pi(out)
# semantic coherence
semantic_coherence(out, keyATM_docs, n = 10)
##### get protest type based on topic probs ####
acled_with_types = out$theta %>%
as.data.frame() %>%
cbind(acled) %>%
pivot_longer(cols = `1_cultural`:`Other_1`, names_to = "topic", values_to = "proportion") %>%
group_by(event_id_cnty) %>%
mutate(max = proportion == max(proportion)) %>%
filter(max) %>%
mutate(protest_type = case_when(
topic == "Other_1" ~ "unclear",
TRUE ~ str_extract(topic, "(?<=_).+")) %>%
factor(levels = c('environmental', 'cultural',
'political', 'social',
'economic', 'legal',
'war', 'unclear')))
View(acled_with_types)
#dictionary
dict = quanteda::dictionary(list(unauthorized = c("not authorized", "unauthorized", "unlawful",
"unsanctioned", "did not approve",
"did not authorize", "not sanctioned",
"not been authorized"),
authorized = c("was authorized", "an authorized",
"was approved", "was sanctioned",
"authorized protest*")))
# alternative tokens with no pre-processing
# as compared to stemmed acled tokens used for keyATM
acled_toks = tokens(corp_acled)
dict_toks = tokens_lookup(acled_toks, dictionary = dict)
res = convert(dfm(dict_toks), to = "data.frame") %>%
rename(event_id_cnty = doc_id)
# check for the indicator
non_zero_count = sum(res$unauthorized != 0 & res$authorized != 0)
# there are 7 observations non-zero values for both auth and non-auth indicator
non_zero_observations <- res %>%
filter(unauthorized != 0 & authorized != 0)
# merge
acled_res = acled_with_types %>% left_join(res, by = "event_id_cnty")
View(acled_res)
acled <- import("data/processed_data/acled_protest_krml_indicator.csv")
pacman::p_load(tidyverse, rio, ggplot2, lubridate, quanteda, keyATM, readxl, caret)
acled <- import("data/processed_data/acled_protest_krml_indicator.csv")
# %>%
#   mutate(docid = paste("text", row_number(), sep = ""))
corp_acled = corpus(acled, text_field = "notes",
docid_field = "event_id_cnty")
# tokenize texts (copying code from acled_keyatm.R)
toks_acled = tokens(corp_acled, remove_punct = TRUE, remove_number = TRUE) %>%
tokens_remove(pattern = c(stopwords("en"), "protest*", "size", "=")) %>%
tokens_wordstem() # stem the keywords to make it easier to use later
dfmt_acled = dfm(toks_acled) %>%
dfm_trim(max_termfreq = 0.80, termfreq_type = "prop") #filter out most common words
keyATM_docs <- keyATM_read(texts = dfmt_acled)
summary(keyATM_docs)
pacman::p_load(tidyverse, rio, ggplot2, lubridate, quanteda, keyATM, readxl, caret)
acled <- import("data/processed_data/acled_protest_krml_indicator.csv")
# %>%
#   mutate(docid = paste("text", row_number(), sep = ""))
corp_acled = corpus(acled, text_field = "notes",
docid_field = "event_id_cnty")
# tokenize texts (copying code from acled_keyatm.R)
toks_acled = tokens(corp_acled, remove_punct = TRUE, remove_number = TRUE) %>%
tokens_remove(pattern = c(stopwords("en"), "protest*", "size", "=")) %>%
tokens_wordstem() # stem the keywords to make it easier to use later
dfmt_acled = dfm(toks_acled) %>%
dfm_trim(max_termfreq = 0.80, termfreq_type = "prop") #filter out most common words
keyATM_docs <- keyATM_read(texts = dfmt_acled)
summary(keyATM_docs)
keywords_with_war = list(cultural = c('histor','tear','demolish','commemor',
'center','museum','heritag','council',
'street','demolit','cultur'),
economic = c('wage','system','econom','compani',
'nationwid','annual','anti-capitalist',
'fairer','paid','promis','pay','land',
'health','increas','bonus',
'payment','left','work'),
environmental = c('park','wast','zone',
'forest','green','road','tree',
'expans','villag','block','cut',
'ecolog','pollut'),
legal = c('amend','term','constitut','propos',
'presidenti','extend',
'limit','law'),
political = c('arrest','releas','governor',
'polit','sentenc',
'assassin','attempt','administr',
'fsb','ldpr','jail','murder','motiv',
'journalist','involv','denounc','critic'),
social = c('vaccin','public','space','certif',
'shop','restaur','mall','mandatori',
'farm','school','interest'),
war = c('ukrain', 'war', 'invas', 'invad', 'militari', 'annex'))
# save(out, file = "acled_keyatm_base_2711.RData")
load("outputs/acled_keyatm_base_2711.RData")
##### model fit plots (not sure how to interpret them)
key_viz <- visualize_keywords(docs = keyATM_docs, keywords = keywords_with_war)
key_viz
top_words(out, 15)
plot_topicprop(out, show_topic = 1:7)
fig_modelfit <- plot_modelfit(out)
fig_modelfit
plot_alpha(out)
plot_pi(out)
##### get protest type based on topic probs ####
acled_with_types = out$theta %>%
as.data.frame() %>%
cbind(acled) %>%
pivot_longer(cols = `1_cultural`:`Other_1`, names_to = "topic", values_to = "proportion") %>%
group_by(event_id_cnty) %>%
mutate(max = proportion == max(proportion)) %>%
filter(max) %>%
mutate(protest_type = case_when(
topic == "Other_1" ~ "unclear",
TRUE ~ str_extract(topic, "(?<=_).+")) %>%
factor(levels = c('environmental', 'cultural',
'political', 'social',
'economic', 'legal',
'war', 'unclear')))
##### (un)authorised indicator #####
#dictionary
dict = quanteda::dictionary(list(unauthorized = c("not authorized", "unauthorized", "unlawful",
"unsanctioned", "did not approve",
"did not authorize", "not sanctioned",
"not been authorized"),
authorized = c("was authorized", "an authorized",
"was approved", "was sanctioned",
"authorized protest*")))
# alternative tokens with no pre-processing
# as compared to stemmed acled tokens used for keyATM
acled_toks = tokens(corp_acled)
dict_toks = tokens_lookup(acled_toks, dictionary = dict)
res = convert(dfm(dict_toks), to = "data.frame") %>%
rename(event_id_cnty = doc_id)
# check for the indicator
non_zero_count = sum(res$unauthorized != 0 & res$authorized != 0)
# there are 7 observations non-zero values for both auth and non-auth indicator
non_zero_observations <- res %>%
filter(unauthorized != 0 & authorized != 0)
# merge
acled_res = acled_with_types %>% left_join(res, by = "event_id_cnty")
write_csv(acled_res, "data/processed_data/acled_types_auth_2018_2023.csv")
pacman::p_load(tidyverse, rio, ggplot2, lubridate)
acled <- import("data/processed_data/acled_types_auth_2018_2023.csv")
## unique observations
length(unique(acled_subset$notes))
## unique observations
length(unique(acled$notes))
# Finding duplicate observations in 'variable'
duplicates <- duplicated(acled$notes)
# Getting the row IDs of these duplicates
row_ids <- which(duplicates)
# Print events
acled$notes[row_ids]
# Convert date column to Date object
acled_subset <- acled %>%
mutate(date = dmy(event_date),
month_year = format(date, "%Y-%m")) %>%
# select(c(notes, date, protest_type, proportion,
#          pro_kremlin_indicator, event_id_cnty)) %>%
filter(date >= as.Date("2021-07-01") & date <= as.Date("2022-12-31"))
# Save as CSV
write.csv(acled_subset, "data/processed_data/acled_preprocessed_jul21_dec22.csv", row.names = FALSE)
# Count unique observations of 'notes' for each month
unique_counts <- acled %>%
filter(pro_kremlin_indicator != 1) %>% # remove pro-krml
group_by(date) %>%
summarise(unique_notes = n_distinct(notes))%>% # counting unique events (notes)
mutate(month_year = ym(month_year))
acled <- import("data/processed_data/acled_types_auth_2018_2023.csv")
## unique observations
length(unique(acled$notes))
# Finding duplicate observations in 'variable'
duplicates <- duplicated(acled$notes)
# Getting the row IDs of these duplicates
row_ids <- which(duplicates)
# Print events
acled$notes[row_ids]
# Convert date column to Date object
acled <- acled %>%
mutate(date = dmy(event_date),
month_year = format(date, "%Y-%m"))
# create a subset from Jul 2021 to end Dec 2022
acled_subset <- acled %>%
# select(c(notes, date, protest_type, proportion,
#          pro_kremlin_indicator, event_id_cnty)) %>%
filter(date >= as.Date("2021-07-01") & date <= as.Date("2022-12-31"))
# Save as CSV
write.csv(acled_subset, "data/processed_data/acled_preprocessed_jul21_dec22.csv", row.names = FALSE)
#### 1. Time-series line plot of the monthly number of unique protests in Russia ####
# Count unique observations of 'notes' for each month
unique_counts <- acled %>%
filter(pro_kremlin_indicator != 1) %>% # remove pro-krml
group_by(date) %>%
summarise(unique_notes = n_distinct(notes))%>% # counting unique events (notes)
mutate(month_year = ym(month_year))
# Count unique observations of 'notes' for each month
unique_counts <- acled %>%
filter(pro_kremlin_indicator != 1) %>% # remove pro-krml
group_by(date) %>%
summarise(unique_notes = n_distinct(notes))%>% # counting unique events (notes)
mutate(month_year = ym(month_year))
View(acled)
# Count unique observations of 'notes' for each month
unique_counts <- acled %>%
filter(pro_kremlin_indicator != 1) %>% # remove pro-krml
group_by(month_year) %>%
summarise(unique_notes = n_distinct(notes))%>% # counting unique events (notes)
mutate(month_year = ym(month_year))
monthly_n_plot <- ggplot(unique_counts, aes(x = month_year, y = unique_notes)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", minor_breaks = "1 month") +
labs(title = "Monthly Number of Unique Protests in Russia",
x = "",
y = "Number of Unique Protests") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "dashed", color = "red")
monthly_n_plot
ggsave("outputs/daily_unique_protests_plot.png", plot = monthly_n_plot, width = 10, height = 6, dpi = 300)
unique_counts_polit <- acled %>%
filter(pro_kremlin_indicator != 1) %>%
mutate(polit_indicator = case_when(
protest_type == "political" ~ "political",
TRUE ~ "other"),
month_year = as.Date(paste0(month_year, "-01"))) %>%
group_by(month_year, polit_indicator) %>%
summarise(unique_notes = n_distinct(notes))
# Plotting
political_protests_plot <- ggplot(unique_counts_polit, aes(x = month_year, y = unique_notes, linetype = polit_indicator)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", minor_breaks = "1 month") +
labs(title = "Monthly Number of Unique Protests in Russia",
x = "",
y = "Number of Unique Protests",
linetype = "") +  # Set legend title to no title
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "dashed", color = "red") +
scale_linetype_manual(values = c("political" = "solid", "other" = "dotdash"))
political_protests_plot
ggsave("outputs/political_protests_plot.png", plot = political_protests_plot, width = 10, height = 6, dpi = 300)
# Prepare the data
unique_counts_share <- acled %>%
filter(pro_kremlin_indicator != 1) %>%
mutate(authorized_status = case_when(
authorized >= 1 & unauthorized == 0 ~ "authorized" ,
unauthorized >= 1 & authorized == 0 ~ "unauthorized",
TRUE ~ "na"
),
month_year = as.Date(paste0(year(date), "-", month(date), "-01"))) %>%
group_by(month_year, authorized_status) %>%
summarise(count = n_distinct(notes)) %>%
spread(authorized_status, count, fill = 0) %>% # Spread data for calculation
mutate(share_unauthorized = unauthorized / (unauthorized + authorized + na)) %>%
select(month_year, share_unauthorized) # Select only necessary columns
# Plot the data
unauthorised_protests_plot <- ggplot(unique_counts_share, aes(x = month_year, y = share_unauthorized)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", minor_breaks = "1 month") +
labs(title = "Monthly Share of Unauthorized Protests in Russia",
x = "",
y = "Share of Unauthorized Protests") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "dashed", color = "red")
ggsave("outputs/unauthorised_protests_plot.png", plot = unauthorised_protests_plot, width = 10, height = 6, dpi = 300)
unauthorised_protests_plot
#### 4 share of unauthorized political and unauthorized non-political ####
# Prepare the data
unique_counts_share <- acled %>%
filter(pro_kremlin_indicator != 1) %>%
mutate(polit_indicator = case_when(protest_type == "political" ~ "political",
TRUE ~ "other"),
authorized_status = case_when(
authorized == 1 ~ "authorized",
unauthorized ==1 & authorized == 0 ~ "unauthorized",
TRUE ~ "na"
),
month_year = as.Date(paste0(year(date), "-", month(date), "-01"))) %>%
group_by(month_year, polit_indicator, authorized_status) %>%
summarise(count = n_distinct(notes)) %>%
spread(authorized_status, count, fill = 0) %>% # Spread data for calculation
mutate(share_unauthorized = unauthorized / (unauthorized + authorized + na)) %>%
select(month_year, share_unauthorized) # Select only necessary columns
# Plot the data
unauthorised_political_protests_plot <- ggplot(unique_counts_share, aes(x = month_year, y = share_unauthorized, color = polit_indicator)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", minor_breaks = "1 month") +
labs(title = "Monthly Share of Unauthorized Protests in Russia by Protest Type",
x = "",
y = "Share of Unauthorized Protests",
color = "Protest Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "dashed", color = "red")
ggsave("outputs/unauthorised_political_protests_plot.png", plot = unauthorised_political_protests_plot, width = 10, height = 6, dpi = 300)
unauthorised_political_protests_plot
# Prepare the data
unique_counts_arrests_share <- acled %>%
filter(pro_kremlin_indicator != 1) %>%
mutate(polit_indicator = case_when(protest_type == "political" ~ "political",
TRUE ~ "other"),
arrests = ifelse(sub_event_type %in% c("Protest with intervention",
"Excessive force against protesters"),
"arrests", "no_arrests"),
authorized_status = case_when(
authorized == 1 ~ "authorized",
unauthorized ==1 & authorized == 0 ~ "unauthorized",
TRUE ~ NA
),
month_year = as.Date(paste0(year(date), "-", month(date), "-01"))) %>%
group_by(month_year, arrests) %>%
summarise(count = n_distinct(notes)) %>%
spread(arrests, count, fill = 0) %>% # Spread data for calculation
mutate(share_arrests = arrests / (arrests + no_arrests)) %>%
select(month_year, share_arrests) # Select only necessary columns
# Plot the data
arrests_protests_plot <- ggplot(unique_counts_arrests_share, aes(x = month_year, y = share_arrests)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", minor_breaks = "1 month") +
labs(title = "Monthly Share of Protests with Arrests in Russia",
x = "",
y = "",
color = "Protest Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "dashed", color = "red")
arrests_protests_plot
ggsave("outputs/share_arrests_plot.png", plot = arrests_protests_plot, width = 10, height = 6, dpi = 300)
# Prepare the data
unique_counts_arrests_share <- acled %>%
filter(pro_kremlin_indicator != 1) %>%
mutate(polit_indicator = case_when(protest_type == "political" ~ "political",
TRUE ~ "other"),
arrests = ifelse(sub_event_type %in% c("Protest with intervention",
"Excessive force against protesters"),
"arrests", "no_arrests"),
authorized_status = case_when(
authorized == 1 ~ "authorized",
unauthorized ==1 & authorized == 0 ~ "unauthorized",
TRUE ~ NA
),
month_year = as.Date(paste0(year(date), "-", month(date), "-01"))) %>%
group_by(month_year, polit_indicator, arrests) %>%
summarise(count = n_distinct(notes)) %>%
spread(arrests, count, fill = 0) %>% # Spread data for calculation
mutate(share_arrests = arrests / (arrests + no_arrests)) %>%
select(month_year, share_arrests) # Select only necessary columns
# Plot the data
arrests_type_protests_plot <- ggplot(unique_counts_arrests_share, aes(x = month_year, y = share_arrests, color = polit_indicator)) +
geom_line() +
geom_point() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y", minor_breaks = "1 month") +
labs(title = "Monthly Share of Protests with Arrests in Russia by Protest Type",
x = "",
y = "",
color = "Protest Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "dashed", color = "red")
ggsave("outputs/share_arrests_by_type_plot.png", plot = arrests_type_protests_plot, width = 10, height = 6, dpi = 300)
arrests_type_protests_plot
