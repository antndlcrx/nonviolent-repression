survey_july <- read_xlsx("data/surveys/survey_june_july.xlsx")[-1,] %>%
# adjust education
# education %in% na_education ~ "NA"
mutate(university_education = case_when(
Q5 %in% uni_education ~ "BA+",
TRUE ~ "BA-"),
gender = fct_recode(Q4,
"Man"= "Мужской",
"Woman" = "Женский"),
age = as.numeric(Q1),
age_group = case_when(
as.numeric(Q1) %in% c(18:24) ~ '18-24',
as.numeric(Q1) %in% c(25:34) ~ '25-34',
as.numeric(Q1) %in% c(35:44) ~ '35-44',
as.numeric(Q1) %in% c(45:54) ~ '45-54',
as.numeric(Q1) %in% c(55:64) ~ '55-64',
as.numeric(Q1) >= 65 ~ '65+',
TRUE ~ NA),
)
ru_population_frame <- read_csv("data/surveys/ru_population_frame.csv")[-c(1:3,16:18), -c(3,7)]
wider_age_categories <- list(
'18-24' = c('18 – 19', '20 – 24'),
'25-34' = c('25 – 29', '30 – 34'),
'35-44' = c('35 – 39', '40 – 44'),
'45-54' = c('45 – 49', '50 – 54'),
'55-64' = c('55 – 59', '60 – 64'),
'65+' = c('65 – 69', '70 и более')
)
map_age_category <- function(age) {
for (category in names(wider_age_categories)) {
if (age %in% wider_age_categories[[category]]) {
return(category)
}
}
return(NA)
}
ru_population_frame$wider_age <- sapply(ru_population_frame$Age, map_age_category)
collapsed_df <- ru_population_frame %>%
group_by(Gender, wider_age) %>%
summarise(
`BA+` = sum(`BA+`, na.rm = TRUE),
`BA-` = sum(`BA-`, na.rm = TRUE) + sum(`NA`, na.rm = TRUE)
)
# harmonise categories
ru_population_frame <- collapsed_df %>%
mutate(Gender = fct_recode(Gender,
"Man"= "Men",
"Woman" = "Women")
) %>%
pivot_longer(
cols = c("BA+", "BA-"),
names_to = "Education",
values_to = "Count"
)
# harmonise features
colnames(ru_population_frame) <- c("gender", "age_group", "university_education",
"Freq")
# load levada data
levada_omnibus <- read_sav("data/surveys/levada_omnibus") %>%
mutate(gender = fct_recode(as.factor(qS1),
"Man"= "1",
"Woman" = "2"),
#adjust age
age_group = case_when(
as.numeric(qS2) %in% c(18:24) ~ '18-24',
as.numeric(qS2) %in% c(25:34) ~ '25-34',
as.numeric(qS2) %in% c(35:44) ~ '35-44',
as.numeric(qS2) %in% c(45:54) ~ '45-54',
as.numeric(qS2) %in% c(55:64) ~ '55-64',
as.numeric(qS2) >= 65 ~ '65+',
TRUE ~ NA),
university_education = case_when(qS3 == 6 ~ "BA+",
TRUE ~ "BA-")
)
# helper funcitons
calculate_shares <- function(dataset, dataset_name) {
dataset %>%
pivot_longer(cols = c(age_group, gender, university_education), names_to = "Variable", values_to = "Values") %>%
group_by(Variable, Values) %>%
summarise(Share = n() / nrow(dataset), .groups = 'drop') %>%
mutate(Survey = dataset_name,
Share = round(Share, 2))
}
kable(head(ru_population_frame, 5),
caption = "Population Frame: Census 2020",
align = "c",
format = "markdown")
shares_levada <- calculate_shares(levada_omnibus, "Levada")
shares_survey_march <- calculate_shares(survey_march, "Q. March")
shares_survey_feb <- calculate_shares(survey_feb, "Q. February")
shares_survey_aug <- calculate_shares(survey_aug, "Q. August")
shares_survey_july <- calculate_shares(survey_july, "Q. July")
combined_shares <- bind_rows(shares_levada,
shares_survey_march,
shares_survey_feb,
shares_survey_aug,
shares_survey_july) %>%
pivot_wider(names_from = Survey, values_from = Share) %>%
mutate(Variable = case_when(
Variable == "age_group" ~ "Age", # improve visibility
Variable == "gender" ~ "Gender",
Variable == "university_education" ~ "Education",
TRUE ~ Variable # default case to leave the variable name as it is
))
kable(combined_shares, caption = "Comparison of Category Shares by Variable\\label{tab:omnibus_shares}",
align = "c",
format = "markdown")
survey_march_strata <- survey_march %>%
group_by(gender, age_group, university_education) %>%
summarise(count = n()) %>%
mutate(proportion = count / nrow(survey_march),
source = "March Survey")
survey_feb_strata <- survey_feb %>%
group_by(gender, age_group, university_education) %>%
summarise(count = n()) %>%
mutate(proportion = count / nrow(survey_feb),
source = "February Survey")
survey_aug_strata <- survey_aug %>%
group_by(gender, age_group, university_education) %>%
summarise(count = n()) %>%
mutate(proportion = count / nrow(survey_aug),
source = "August Survey")
survey_jul_strata <- survey_july %>%
group_by(gender, age_group, university_education) %>%
summarise(count = n()) %>%
mutate(proportion = count / nrow(survey_july),
source = "July Survey")
pop_strata <- ru_population_frame %>%
ungroup() %>%
mutate(proportion = Freq/sum(Freq),
source = "Census 2020")
combined_strata <- combined_strata <- rbind(survey_march_strata, survey_feb_strata,
survey_aug_strata, survey_jul_strata,
pop_strata)
census_for_feb <- combined_strata %>%
filter(source == "Census 2020") %>%
mutate(comparison = "Census 2020")
census_for_aug <- combined_strata %>%
filter(source == "Census 2020") %>%
mutate(comparison = "Census  2020")
# plot differences
ggplot(combined_strata, aes(x = university_education,
y = proportion,
color = source, shape = source)) +
geom_point(size = 3) +
# geom_line(aes(group = interaction(age_group, university_education))) +
facet_grid(gender ~ age_group) +
scale_color_manual(values = c("Census 2020" = "red", "March Survey" = "purple",
"February Survey" = "lightblue", "August Survey" = "darkgreen",
"July Survey" = "blue")) +
scale_shape_manual(values = c("Census 2020" = 16,"March Survey" = 15,
"February Survey" = 17, "August Survey" = 18,
"July Survey" = 21)) +
labs(x = "University Education", y = "Proportion", shape = "Source", color = "Source") +
theme(legend.position = "bottom") +
theme_bw()
unweighted_data <- svydesign(ids = ~1, data = survey_march)
weighted <- postStratify(unweighted_data, ~age_group + gender + university_education,
ru_population_frame, partial=TRUE)
# save weights
survey_march$weight_poststratify <- weights(weighted)
sum_march <- round(summary(weights(weighted)), 2)
sum_march_mat <-  matrix(as.numeric(sum_march), nrow = 1,
dimnames = list(c("Value"),
names(sum_march)
)
)
kable(sum_march_mat,
caption = "March Survey PostStratify Weights Summary",
align = 'c',
format = "markdown")
top_five_rows_march <- survey_march  %>%
distinct(weight_poststratify, .keep_all = TRUE) %>%
arrange(desc(weight_poststratify)) %>%
select(age_group, gender, university_education, weight_poststratify)%>%
head(5)
kable(top_five_rows_march, caption = "March Survey, Top Five Rows by Weight", align = 'c')
## survey library ##
unweighted_data <- svydesign(ids = ~1, data = survey_feb)
weighted <- postStratify(unweighted_data, ~age_group + gender + university_education,
ru_population_frame, partial=TRUE)
# save weights
survey_feb$weight_poststratify <- weights(weighted)
sum_feb <- round(summary(weights(weighted)), 2)
sum_feb_mat <-  matrix(as.numeric(sum_feb), nrow = 1,
dimnames = list(c("Value"),
names(sum_feb)
)
)
kable(sum_feb_mat,
caption = "February Survey PostStratify Weights Summary",
align = 'c',
format = "markdown")
top_five_rows_feb <- survey_feb %>%
distinct(weight_poststratify, .keep_all = TRUE) %>%
arrange(desc(weight_poststratify)) %>%
select(age_group, gender, university_education, weight_poststratify) %>%
slice_head(n = 5)
kable(top_five_rows_feb, caption = "February Survey, Top Five Rows by Unique Weight", align = 'c')
## survey library ##
unweighted_data <- svydesign(ids = ~1, data = survey_aug)
weighted <- postStratify(unweighted_data, ~age_group + gender + university_education,
ru_population_frame, partial=TRUE)
# save weights
survey_aug$weight_poststratify <- weights(weighted)
sum_aug <- round(summary(weights(weighted)), 2)
sum_aug_mat <-  matrix(as.numeric(sum_aug), nrow = 1,
dimnames = list(c("Value"),
names(sum_aug)
)
)
kable(sum_aug_mat,
caption = "August Survey PostStratify Weights Summary",
align = 'c',
format = "markdown")
top_five_rows_aug <- survey_aug  %>%
distinct(weight_poststratify, .keep_all = TRUE) %>%
arrange(desc(weight_poststratify)) %>%
select(age_group, gender, university_education, weight_poststratify)%>%
head(5)
kable(top_five_rows_aug, caption = "August Survey, Top Five Rows by Weight", align = 'c')
## survey library ##
unweighted_data <- svydesign(ids = ~1, data = survey_july)
weighted <- postStratify(unweighted_data, ~age_group + gender + university_education,
ru_population_frame, partial=TRUE)
# save weights
survey_july$weight_poststratify <- weights(weighted)
sum_jul <- round(summary(weights(weighted)), 2)
sum_jul_mat <-  matrix(as.numeric(sum_jul), nrow = 1,
dimnames = list(c("Value"),
names(sum_jul)
)
)
kable(sum_jul_mat,
caption = "August Survey PostStratify Weights Summary",
align = 'c',
format = "markdown")
top_five_rows_jul <- survey_july  %>%
distinct(weight_poststratify, .keep_all = TRUE) %>%
arrange(desc(weight_poststratify)) %>%
select(age_group, gender, university_education, weight_poststratify)%>%
head(5)
kable(top_five_rows_jul, caption = "July Survey, Top Five Rows by Weight", align = 'c')
survey_march_selected <- survey_march %>%
mutate(Survey = 'March') %>%
select(weight_poststratify, Survey)
survey_feb_selected <- survey_feb %>%
mutate(Survey = 'February') %>%
select(weight_poststratify, Survey)
survey_aug_selected <- survey_aug %>%
mutate(Survey = 'August') %>%
select(weight_poststratify, Survey)
survey_jul_selected <- survey_july %>%
mutate(Survey = 'July') %>%
select(weight_poststratify, Survey)
combined_weights <- rbind(survey_march_selected, survey_feb_selected,
survey_aug_selected, survey_jul_selected)
ggplot(combined_weights, aes(x = weight_poststratify, fill = Survey)) +
geom_histogram(data = subset(combined_weights, Survey == 'March'), bins = 100, alpha = 0.5, color = "black") +
geom_histogram(data = subset(combined_weights, Survey == 'February'), bins = 100, alpha = 0.5, color = "black") +
geom_histogram(data = subset(combined_weights, Survey == 'August'), bins = 100, alpha = 0.5, color = "black") +
geom_histogram(data = subset(combined_weights, Survey == 'July'), bins = 100, alpha = 0.5, color = "black") +
scale_fill_manual(values = c("March" = "lightblue", "February" = "blue", "August" = "red",
"July" = "green")) +
theme_minimal() +
labs(title = "Distribution of Weights by Survey",
x = "Weight",
y = "Frequency")
plot_march <- ggplot(survey_march_selected, aes(x = weight_poststratify)) +
geom_histogram(bins = 100, fill = "lightblue", color = "black", alpha = 0.5) +
theme_minimal() +
labs(
x = "Weight",
y = "Frequency")
plot_feb <- ggplot(survey_feb_selected, aes(x = weight_poststratify)) +
geom_histogram(bins = 100, fill = "blue", color = "black", alpha = 0.5) +
theme_minimal() +
labs(
x = "Weight",
y = "Frequency")
plot_aug <- ggplot(survey_aug_selected, aes(x = weight_poststratify)) +
geom_histogram(bins = 100, fill = "red", color = "black", alpha = 0.5) +
theme_minimal() +
labs(
x = "Weight",
y = "Frequency")
plot_jul <- ggplot(survey_jul_selected, aes(x = weight_poststratify)) +
geom_histogram(bins = 100, fill = "green", color = "black", alpha = 0.5) +
theme_minimal() +
labs(
x = "Weight",
y = "Frequency")
grid.arrange(plot_march, plot_feb, plot_aug, plot_jul, ncol = 2, top = "Distribution of Weights Across Months")
survey_march_strata <- survey_march %>%
group_by(gender, age_group, university_education) %>%
summarise(count = n()) %>%
mutate(proportion = count / nrow(survey_march),
source = "March Survey")
pop_strata <- ru_population_frame %>%
ungroup() %>%
mutate(proportion = Freq/sum(Freq),
source = "Census 2020")
combined_strata <- combined_strata <- rbind(survey_march_strata,  pop_strata)
weights_march_strata_man <- left_join(survey_march_strata,
pop_strata,
c("gender", "age_group", "university_education")) %>%
rename(population_proportion = proportion.y,
sample_proportion = proportion.x)  %>%
# calculate weights as popul prop/sample prop
mutate(weight = population_proportion / sample_proportion)
survey_march <- survey_march %>%
left_join(weights_march_strata_man, by = c("age_group", "gender", "university_education")) %>%
rename(weight_manually_calculated = weight)
sum_man_march <- round(summary(weights_march_strata_man$weight), 2)
sum_man_march_mat <-  matrix(as.numeric(sum_man_march), nrow = 1,
dimnames = list(c("Value"),
names(sum_man_march)
)
)
kable(sum_man_march_mat,
caption = "March Survey Weights Summary",
align = 'c',
format = "markdown")
# calculate weights and print the df with weights
weights_feb_strata_man <- left_join(survey_feb_strata,
pop_strata,
c("gender", "age_group", "university_education")) %>%
rename(population_proportion = proportion.y,
sample_proportion = proportion.x)  %>%
# calculate weights as popul prop/sample prop
mutate(weight = population_proportion / sample_proportion)
sum_man_feb <- round(summary(weights_feb_strata_man$weight), 2)
sum_man_feb_mat <-  matrix(as.numeric(sum_man_feb), nrow = 1,
dimnames = list(c("Value"),
names(sum_man_feb)
)
)
kable(sum_man_feb_mat,
caption = "February Survey Weights Summary",
align = 'c',
format = "markdown")
# calculate weights and print the df with weights
weights_aug_strata_man <- left_join(survey_aug_strata,
pop_strata,
c("gender", "age_group", "university_education")) %>%
rename(population_proportion = proportion.y,
sample_proportion = proportion.x)  %>%
# calculate weights as popul prop/sample prop
mutate(weight = population_proportion / sample_proportion)
sum_man_aug <- round(summary(weights_aug_strata_man$weight), 2)
sum_man_aug_mat <-  matrix(as.numeric(sum_man_aug), nrow = 1,
dimnames = list(c("Value"),
names(sum_man_aug)
)
)
kable(sum_man_aug_mat,
caption = "August Survey Weights Summary",
align = 'c',
format = "markdown")
# calculate weights and print the df with weights
weights_jul_strata_man <- left_join(survey_jul_strata,
pop_strata,
c("gender", "age_group", "university_education")) %>%
rename(population_proportion = proportion.y,
sample_proportion = proportion.x)  %>%
# calculate weights as popul prop/sample prop
mutate(weight = population_proportion / sample_proportion)
sum_man_jul <- round(summary(weights_jul_strata_man$weight), 2)
sum_man_jul_mat <-  matrix(as.numeric(sum_man_jul), nrow = 1,
dimnames = list(c("Value"),
names(sum_man_jul)
)
)
survey_july <- survey_july %>%
left_join(weights_jul_strata_man, by = c("age_group", "gender", "university_education")) %>%
rename(weight_manually_calculated = weight)
kable(sum_man_jul_mat,
caption = "July Survey Weights Summary",
align = 'c',
format = "markdown")
weights_march_strata_man <- weights_march_strata_man %>%
mutate(Survey = 'March') %>%
select(weight, Survey, age_group, gender, university_education)
weights_feb_strata_man <- weights_feb_strata_man %>%
mutate(Survey = 'February') %>%
select(weight, Survey, age_group, gender, university_education)
weights_aug_strata_man <- weights_aug_strata_man %>%
mutate(Survey = 'August') %>%
select(weight, Survey,  age_group, gender, university_education)
weights_jul_strata_man <- weights_jul_strata_man %>%
mutate(Survey = 'July') %>%
select(weight, Survey,  age_group, gender, university_education)
combined_weights <- rbind(weights_march_strata_man, weights_feb_strata_man,
weights_aug_strata_man, weights_jul_strata_man)
ggplot(combined_weights, aes(x = weight, fill = Survey)) +
geom_histogram(data = subset(combined_weights, Survey == 'February'), bins = 100, alpha = 0.5, color = "black") +
geom_histogram(data = subset(combined_weights, Survey == 'August'), bins = 100, alpha = 0.5, color = "black") +
geom_histogram(data = subset(combined_weights, Survey == 'March'), bins = 100, alpha = 0.5, color = "black") +
geom_histogram(data = subset(combined_weights, Survey == 'July'), bins = 100, alpha = 0.5, color = "black") +
scale_fill_manual(values = c("February" = "blue", "August" = "red", "March" = "lightblue",
"July" = "green")) +
theme_minimal() +
labs(title = "Distribution of Weights by Survey",
x = "Weight",
y = "Frequency")
plot_feb <- ggplot(weights_feb_strata_man, aes(x = weight)) +
geom_histogram(bins = 100, fill = "blue", color = "black", alpha = 0.5) +
theme_minimal() +
labs(x = "Weight", y = "Frequency")
plot_aug <- ggplot(weights_aug_strata_man, aes(x = weight)) +
geom_histogram(bins = 100, fill = "red", color = "black", alpha = 0.5) +
theme_minimal() +
labs(x = "Weight", y = "Frequency")
plot_march <- ggplot(weights_march_strata_man, aes(x = weight)) +
geom_histogram(bins = 100, fill = "lightblue", color = "black", alpha = 0.5) +
theme_minimal() +
labs(x = "Weight", y = "Frequency")
plot_july <- ggplot(weights_jul_strata_man, aes(x = weight)) +
geom_histogram(bins = 100, fill = "green", color = "black", alpha = 0.5) +
theme_minimal() +
labs(x = "Weight", y = "Frequency")
grid.arrange(plot_feb, plot_aug, plot_march, plot_july, ncol = 2, top = "Distribution of Weights Across Months")
survey_july <- survey_july %>%
mutate(
treatment1 = case_when(!is.na(DV1A) ~ "A",
!is.na(DV1B) ~ "B",
!is.na(DV1C) ~ "C",
!is.na(DV1D) ~ "D",
!is.na(DV1E) ~ "E",
!is.na(DV1F) ~ "F",
!is.na(DV1H) ~ "I",
!is.na(DV1I) ~ "I",
TRUE ~ NA_character_),
urban = case_when(
Q3 == "В городе более 1 млн. жителей (кроме Москвы и Санкт-Петербурга)" ~ "city_more_than_1_million",
Q3 == "Москва" ~ "Moscow",
Q3 == "Санкт-Петербург" ~ "Saint_Petersburg",
Q3 == "В городе / поселке / селе 100 тыс. и менее жителей" ~ "city_or_village_less_than_100_thousand",
Q3 == "В городе 250-500 тыс. жителей" ~ "city_250_500_thousand",
Q3 == "В городе 500 тыс.-1 млн. жителей" ~ "city_500_thousand_to_1_million",
Q3 == "В городе 100-250 тыс. жителей" ~ "city_100_250_thousand",
Q3 == "Отказ от ответа" ~ "no_answer",
Q3 == "Затрудняюсь ответить" ~ "difficult_to_answer",
TRUE ~ Q3
)
)
check_one <- multinom(treatment1 ~ age + gender + university_education + urban, data = survey_july)
stargazer(check_one,
header=FALSE,
title="Randomisation Check Protest",
digits=2,
column.sep.width = "2pt", # to reduce column width
font.size = "small", # to make font size smaller
no.space = TRUE,
add.lines = list(c("\\textit{$n$}", nrow(survey_july), nrow(survey_july),
nrow(survey_july), nrow(survey_july),
nrow(survey_july), nrow(survey_july),
nrow(survey_july), nrow(survey_july))))
survey_july <- survey_july %>%
mutate(
treatment2 = case_when(!is.na(DV3A) ~ "A",
!is.na(DV3B) ~ "B",
!is.na(DV3C) ~ "C",
TRUE ~ NA_character_)
)
check_two <- multinom(treatment2 ~ age + gender + university_education + urban, data = survey_july)
stargazer(check_two,
digits=2,
title="Randomisation Check Education Experiment 1",
header=FALSE,
no.space = TRUE,
add.lines = list(c("\\textit{$n$}", nrow(survey_july), nrow(survey_july))))
survey_july <- survey_july %>%
mutate(
treatment3 = case_when(!is.na(DV5A) ~ "A",
!is.na(DV5B) ~ "B",
!is.na(DV5C) ~ "C",
TRUE ~ NA_character_)
)
check_three <- multinom(treatment3 ~ age + gender + university_education + urban, data = survey_july)
stargazer(check_three,
header=FALSE,
title="Randomisation Check Education Experiment 2",
digits=2,
no.space = TRUE,
add.lines = list(c("\\textit{$n$}", nrow(survey_july), nrow(survey_july))))
survey_july <- survey_july %>%
mutate(
missing_treatment1 = coalesce(DV1A, DV1B, DV1C, DV1D, DV1E, DV1F, DV1H, DV1I),
missing_treatment1 = case_when(
missing_treatment1 == "Отказ от ответа" ~ 1,
missing_treatment1 == "Затрудняюсь ответить" ~ 1,
TRUE ~ 0
),
missing_treatment2 = coalesce(DV3A, DV3B, DV3C),
missing_treatment2 = case_when(
missing_treatment2 == "Отказ от ответа" ~ 1,
missing_treatment2 == "Затрудняюсь ответить" ~ 1,
TRUE ~ 0
),
missing_treatment3 = coalesce(DV5A, DV5B, DV5C),
missing_treatment3 = case_when(
missing_treatment3 == "Отказ от ответа" ~ 1,
missing_treatment3 == "Затрудняюсь ответить" ~ 1,
TRUE ~ 0
)
)
missing_t1 <- lm(missing_treatment1 ~ age + gender + university_education + urban, data = survey_july)
missing_t2 <- lm(missing_treatment2 ~ age + gender + university_education + urban, data = survey_july)
missing_t3 <- lm(missing_treatment3 ~ age + gender + university_education + urban, data = survey_july)
View(survey_july)
View(survey_july)
