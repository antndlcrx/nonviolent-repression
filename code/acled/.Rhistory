sources_share <- acled_subset_for_plot %>%
group_by(month, source_origin) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(month) %>%
mutate(share = count / sum(count))
View(sources_share)
source_share_plot <- ggplot(sources_share, aes(x = month, y = share, linetype = source_origin)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("International", "Domestic"),
values = c("International" = "dashed",
"Domestic" = "solid")) +
labs(title = "Monthly Share of Reports by Source",
x = "",
y = "Share of Records",
linetype = "Source") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
source_share_plot
View(sources_share)
source_share_plot <- ggplot(sources_share, aes(x = month, y = share, linetype = source_origin)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("International", "Domestic"),
values = c("international" = "dashed",
"russian" = "solid")) +
labs(title = "Monthly Share of Reports by Source",
x = "",
y = "Share of Records",
linetype = "Source") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
source_share_plot
View(na_plot_org)
source_share_plot <- ggplot(sources_share, aes(x = month, y = share, linetype = source_origin)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("International", "Domestic"),
values = c("international" = "dashed",
"russian" = "solid")) +
labs(title = "Monthly Share of Reports by Source",
x = "",
y = "Share of Records",
linetype = "Source") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = 60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = 60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
source_share_plot
source_share_plot <- ggplot(sources_share, aes(x = month, y = share, linetype = source_origin)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("International", "Domestic"),
values = c("international" = "dashed",
"russian" = "solid")) +
labs(title = "Monthly Share of Reports by Source",
x = "",
y = "Share of Records",
linetype = "Source") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = .60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = .60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
source_share_plot
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/share_by_source.png", plot = na_plot, width = 10, height = 6, dpi = 300)
acled_subset_for_plot <- acled1 %>%
# filter(date >= '2021-01-01') %>%
mutate(month = floor_date(date, unit = "month"))
na_counts <- acled_subset_for_plot %>%
group_by(month) %>%
summarise(na_count = sum(is.na(crowd_size)),
not_na_count = sum(!is.na(crowd_size)))
na_plot <- ggplot(na_counts, aes(x = month)) +
geom_line(aes(y = na_count, linetype = "NA")) +
geom_point(aes(y = na_count)) +
geom_line(aes(y = not_na_count, linetype = "Not NA")) +
geom_point(aes(y = not_na_count)) +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("Not Reported", "Reported"),
values = c("NA" = "dashed",
"Not NA" = "solid")) +
labs(title = "Monthly Number of Reported vs Not Reported Crowd Sizes",
x = "",
y = "Number of Records",
linetype = "Crowd Size Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
na_plot
na_plot <- ggplot(na_counts, aes(x = month)) +
geom_line(aes(y = na_count, linetype = "NA")) +
geom_point(aes(y = na_count)) +
geom_line(aes(y = not_na_count, linetype = "Not NA")) +
geom_point(aes(y = not_na_count)) +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("Not Reported", "Reported"),
values = c("NA" = "dashed",
"Not NA" = "solid")) +
labs(title = "Monthly Number of Reported vs Not Reported Crowd Sizes",
x = "",
y = "Number of Records",
linetype = "Crowd Size Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = .60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = .60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
na_plot
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/crowd_size_reports_before_after_inv.png", plot = na_plot, width = 10, height = 6, dpi = 300)
na_shares <- acled_subset_for_plot %>%
group_by(month) %>%
summarise(
total_count = n(),
not_na_count = sum(!is.na(crowd_size)),
na_count = sum(is.na(crowd_size))
) %>%
mutate(share_reported = (not_na_count / total_count)*100)
na_share_plot <- ggplot(na_shares, aes(x = month, y = share_reported)) +
geom_line(linetype = "solid") +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
labs(title = "Monthly Share of Reported Crowd Sizes",
x = "",
y = "Proportion of Reported Crowd Sizes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = 60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = 60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
na_share_plot
na_share_plot <- ggplot(na_shares, aes(x = month, y = share_reported)) +
geom_line(linetype = "solid") +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
labs(title = "Monthly Share of Reported Crowd Sizes",
x = "",
y = "Proportion of Reported Crowd Sizes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = 60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = 60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
na_share_plot
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/crowd_size_reports_share_before_after_inv.png", plot = na_share_plot, width = 10, height = 6, dpi = 300)
acled_subset_for_plot <- acled1 %>%
# filter(date >= '2021-01-01') %>%
mutate(month = floor_date(date, unit = "month"))
na_counts_org <- acled_subset_for_plot %>%
group_by(month) %>%
summarise(na_count = sum(is.na(org_indicator)),
not_na_count = sum(!is.na(org_indicator)))
na_plot_org <- ggplot(na_counts_org, aes(x = month)) +
geom_line(aes(y = na_count, linetype = "NA")) +
geom_point(aes(y = na_count)) +
geom_line(aes(y = not_na_count, linetype = "Not NA")) +
geom_point(aes(y = not_na_count)) +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("Not Reported", "Reported"),
values = c("NA" = "dashed",
"Not NA" = "solid")) +
labs(title = "Monthly Number of Reported vs Not Reported Protest Organisers",
x = "",
y = "Number of Records",
linetype = "Organiser Report Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
na_plot_org
View(acled1)
na_shares_org <- acled_subset_for_plot %>%
group_by(month) %>%
summarise(
total_count = n(),
not_na_count = sum(!is.na(org_indicator)),
na_count = sum(is.na(org_indicator))
) %>%
mutate(share_reported = (not_na_count / total_count)*100)
na_share_org_plot <- ggplot(na_shares_org, aes(x = month, y = share_reported)) +
geom_line(linetype = "solid") +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
labs(title = "Monthly Share of Reported Organisers",
x = "",
y = "Proportion of Reported Organisers") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = 60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = 60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
na_share_org_plot
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/crowd_size_reports_before_after_inv.png", plot = na_share_org_plot, width = 10, height = 6, dpi = 300)
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/organisers_share_before_after_inv.png", plot = na_share_org_plot, width = 10, height = 6, dpi = 300)
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/crowd_size_reports_share_before_after_inv.png", plot = na_share_plot, width = 10, height = 6, dpi = 300)
acled_subset_for_plot <- acled %>%
# filter(date >= '2021-01-01') %>%
mutate(month = floor_date(date, unit = "month"),
pro_gov = case_when(org_indicator == "pro_kremlin" ~ "Pro Government",
org_indicator == "syst_opposition" ~ "Systemic Opposition",
TRUE ~ "Other"))
# Count unique observations of 'notes' for each month
unique_counts <- acled_subset_for_plot %>%
group_by(month, pro_gov) %>%
summarise(num_protest = n_distinct(notes))
# Create the plot
monthly_n_plot <- ggplot(unique_counts, aes(x = month, y = num_protest, linetype = pro_gov)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(values = c("Other" = "solid",
"Systemic Opposition" = "dashed",
"Pro Government" = "dotted")) +
labs(title = "Monthly Number of Unique Protests in Russia by Organiser",
x = "",
y = "Number of Unique Protests",
linetype = "Protest Organiser") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = 160, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = 160, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
monthly_n_plot
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/protests_before_after_inv_by_organiser.png", plot = monthly_n_plot, width = 10, height = 6, dpi = 300)
acled_subset_for_plot <- acled %>%
# filter(date >= '2021-01-01') %>%
mutate(month = floor_date(date, unit = "month"),
pro_gov = case_when(org_indicator == "pro_kremlin" ~ "Pro Government",
org_indicator == "syst_opposition" ~ "Systemic Opposition",
TRUE ~ "Other"),
protest_type = case_when(pred_labels == "war_anti" ~ "political",
pred_labels == "cultural" | pred_labels == "legal" ~ "cultural/legal",
TRUE ~ pred_labels))
# Count unique observations of 'notes' for each month
unique_counts_type <- acled_subset_for_plot %>%
filter(protest_type != "war_pro") %>%
group_by(month, protest_type) %>%
summarise(num_protest = n_distinct(notes))
# Create the plot
monthly_n_plot_type <- ggplot(unique_counts_type, aes(x = month, y = num_protest, color = protest_type)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
# scale_linetype_manual(values = c("economic" = "solid",
#                                  "environmental" = "dashed",
#                                  "cultural/legal" = "dotted",
#                                  "political" = "F1",
#                                  "social" = "dotdash")) +
labs(title = "Monthly Number of Unique Protests in Russia by Organiser",
x = "",
y = "Number of Unique Protests",
color = "Protest Type") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = 160, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = 160, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
monthly_n_plot_type
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/protests_before_after_inv_by_type.png", plot = monthly_n_plot_type, width = 10, height = 6, dpi = 300)
acled_source <- acled1 %>%
separate_rows(source_scale, sep = "-") %>%
mutate(source_origin = case_when(source_scale == "International" ~ "International",
# source_scale == "New media" ~ "New media",
TRUE ~ "Domestic"))
acled_subset_for_plot <- acled1 %>%
# filter(source_origin != "New media") %>%
mutate(month = floor_date(date, unit = "month"))
sources_counts <- acled_subset_for_plot %>%
group_by(month, source_origin) %>%
summarise(count = n()
)
source_counts_plot <- ggplot(sources_counts, aes(x = month, y = count, linetype = source_origin)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("International", "Russian"),
values = c("international" = "dashed",
"russian" = "solid")) +
labs(title = "Monthly Number of Reports by Source",
x = "",
y = "Number of Records",
linetype = "source") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
source_counts_plot
sources_share <- acled_subset_for_plot %>%
group_by(month, source_origin) %>%
summarise(count = n(), .groups = 'drop') %>%
group_by(month) %>%
mutate(share = count / sum(count))
source_share_plot <- ggplot(sources_share, aes(x = month, y = share, linetype = source_origin)) +
geom_line() +
geom_point() +
scale_x_date(
date_breaks = "1 month",
labels = function(x) ifelse(month(x) == 1, format(x, "%Y-%b"), format(x, "%b")),
expand = c(0, 0)
) +
scale_linetype_manual(labels = c("International", "Domestic"),
values = c("international" = "dashed",
"russian" = "solid")) +
labs(title = "Monthly Share of Reports by Source",
x = "",
y = "Share of Records",
linetype = "Source") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))+
geom_vline(xintercept = as.Date("2022-02-24"), linetype = "solid", color = "red") +
annotate(geom = "text", x = as.Date("2022-02-24"), y = .60, label = "Invasion", vjust = -0.5, hjust = 0.5, color = "red", angle = 90, size = 3) +
geom_vline(xintercept = as.Date("2022-09-21"), linetype = "solid", color = "darkgreen") +
annotate(geom = "text", x = as.Date("2022-09-21"), y = .60, label = "Mobilisation", vjust = -0.5, hjust = 0.5, color = "darkgreen", angle = 90, size = 3)
source_share_plot
ggsave("C:/Users/murrn/GitHub/nonviolent-repression/outputs/acled/share_by_source.png", plot = source_share_plot, width = 10, height = 6, dpi = 300)
##### Script adding further variables of interest to ACLED #####
## Variables are: Pre-post invasion dummy, Federal Election month,
## Police violence during protest
## Some further data cleaning is applied
pacman::p_load(rio, tidyverse, readr, broom,
lubridate, gt, gtsummary, survey, readxl,
gridExtra, knitr, haven, stargazer, nnet, ggeffects)
DATA_CODES = "https://cdn.githubraw.com/antndlcrx/nonviolent-repression/main/data/acled_raw_data/region_codes.xlsx"
acled <- import("C:/Users/murrn/GitHub/nonviolent-repression/data/acled_processed_data/acled_with_org_indicator.csv")
codes = data <- openxlsx::read.xlsx(DATA_CODES, sheet = "Sheet1")
codes <- codes %>%
mutate(region_name_en = str_trim(region_name_en))
## unique observations
length(unique(acled$notes))
# Finding duplicate observations in 'variable'
duplicates <- duplicated(acled$notes)
# Getting the row IDs of these duplicates
row_ids <- which(duplicates)
# Print events
acled$notes[row_ids]
acled_clean <- acled[!duplicated(acled$event_id_cnty), ]
# Convert date column to Date object and create DVs:
# pre/post invasion
# election_month
acled_clean <- acled_clean %>%
mutate(date = ymd(event_date),
pred_labels = recode(pred_labels,
"war (pro)" = "war_pro",
"war (anti)" = "war_anti"),
month_year = format(date, "%Y-%m"),
post_invasion = factor(case_when(
date >= as.Date("2022-02-24") ~ 1,
TRUE ~ 0)),
police_violence = factor(case_when(
sub_event_type %in% c("Protest with intervention", "Excessive force against protesters") ~ 1,
TRUE ~ 0
)),
election_month = factor(case_when(
month_year %in% c("2021-09", "2018-03", "2024-03", "2020-06", "2020-07") ~ 1,
TRUE ~ 0))
)
mapping <- c(
'Saint Petersburg' = 'The City of Saint-Petersburg',
'Sverdlovsk' = 'Sverdlovsk region',
'Moscow' = 'The City of Moscow',
'Republic of Tatarstan' = 'Republic of Tatarstan',
'Novosibirsk' = 'Novosibirsk region',
'Novgorod' = 'Novgorod region',
'Samara' = 'Samara region',
'Republic of Mari El' = 'Republic of Mariy El',
'Republic of Dagestan' = 'Republic of Daghestan',
'Tomsk' = 'Tomsk region',
'Republic of Karachay-Cherkessia' = 'Karachaev-Circassian Republic',
'Moscow Oblast' = 'Moscow region',
'Volgograd' = 'Volgograd region',
'Chelyabinsk' = 'Chelyabinsk region',
'Kaliningrad' = 'Kaliningrad region',
'Khabarovsk' = 'Khabarovsk territory',
'Republic of Khakassia' = 'Republic of Khakassia',
'Perm' = 'Perm region',
'Vologda' = 'Vologda region',
'Republic of Sakha' = 'Republic of Sakha (Yakutia)',
'Tula' = 'Tula region',
'Kemerovo' = 'Kemerovo region',
'Altai' = 'Altai territory',
'Republic of Bashkortostan' = 'Republic of Bashkortastan',
'Penza' = 'Penza region',
'Republic of Chuvash' = 'Chuvash Republic',
'Krasnoyarsk' = 'Krasnoyarsk territory',
'Orenburg' = 'Orenburg region',
'Tyumen' = 'Tyumen region',
'Republic of Kabardino-Balkaria' = 'Kabardian-Balkar Republic',
'Kostroma' = 'Kostroma region',
'Vladimir' = 'Vladimir region',
'Arkhangelsk' = 'Arkhangelsk region',
'Rostov' = 'Rostov region',
'Krasnodar' = 'Krasnodar territory',
'Khanty-Mansi' = 'Khanty-Mansi autonomous',
'Kaluga' = 'Kaluga region',
'Republic of Karelia' = 'Republic of Karelia',
'Voronezh' = 'Voronezh region',
'Ryazan' = 'Ryazan region',
'Zabaykalskiy' = 'Chita region',
'Ulyanovsk' = 'Ulyanovsk region',
'Republic of Komi' = 'Republic of Komi',
'Republic of Buryatia' = 'Republic of Buryatia',
'Nizhny Novgorod' = 'Nizhny novgorod region',
'Ivanovo' = 'Ivanovo region',
'Saratov' = 'Saratov region',
'Irkutsk' = 'Irkutsk region',
'Republic of Altai' = 'Republic of Altai',
'Primorskiy' = 'Primorsky territory',
'Republic of Chechnya' = 'Chechen Republic',
'Belgorod' = 'Belgorod region',
'Lipetsk' = 'Lipetsk region',
'Udmurt Republic' = 'Udmurt Republic',
'Astrakhan' = 'Astrakhan region',
'Kirov' = 'Kirov region',
'Yaroslavl' = 'Yaroslavl region',
'Kursk' = 'Kursk region',
'Omsk' = 'Omsk region',
'Republic of Mordovia' = 'Republic of Mordovia',
'Tambov' = 'Tambov region',
'Smolensk' = 'Smolensk region',
'Republic of Ingushetia' = 'Republic of Ingushetia',
'Oryol' = 'Oryol region',
'Pskov' = 'Pskov region',
'Republic of Tuva' = 'Republic of Tyva',
'Republic of North Ossetia-Alania' = 'Republic of North Ossetia -Alania',
'Jewish Autonomous Oblast' = 'Jewish autonomous region',
'Kamchatka' = 'Kamchatka region',
'Magadan' = 'Magadan region',
'Republic of Kalmykia' = 'Republic of Kalmykia',
'Yamalo-Nenets' = 'Yamalo-Nenets autonomous',
'Bryansk' = 'Bryansk region',
'Stavropol' = 'Stavropol territory',
'Tver' = 'Tver region',
'Murmansk' = 'Murmansk region',
'Republic of Adygea' = 'Republic of Adygeya',
'Amur' = 'Amur region',
'Sakhalin' = 'Sakhalin region',
'Leningrad' = 'Leningrad region',
'Chukotka' = 'Chukotka autonomous area',
'Nenets' = 'Nenets autonomous area',
'Kurgan' = 'Kurgan region'
)
# apply mapping
acled_clean$federal_subject <- mapping[acled_clean$admin1]
acled_clean <- acled_clean %>%
left_join(codes, by = c("federal_subject" = "region_name_en"))
acled_clean <- acled_clean %>%
mutate(source_origin = case_when(str_detect(source_scale, "International") ~ "international",
TRUE ~ "russian"))
acled_clean$source_origin
# write_csv(acled_clean, "C:/Users/murrn/GitHub/nonviolent-repression/data/acled_processed_data/acled_with_dvs_and_controls_09_07_2024.csv")
# write_excel_csv(acled_clean, "C:/Users/murrn/GitHub/nonviolent-repression/data/acled_processed_data/acled_with_dvs_and_controls_09_07_2024_utf8byte.csv")
write_excel_csv(acled_clean, "C:/Users/murrn/GitHub/nonviolent-repression/data/acled_processed_data/acled_with_dvs_and_controls_16_07_2024_utf8byte.csv")
